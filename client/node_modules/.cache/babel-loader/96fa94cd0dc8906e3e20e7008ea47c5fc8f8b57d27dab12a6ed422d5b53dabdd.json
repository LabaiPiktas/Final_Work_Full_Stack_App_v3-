{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const deleteThread = threadId => {\n    fetch(`http://localhost:4000/api/delete/thread/${threadId}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      setThreadList(prevThreadList => prevThreadList.filter(thread => thread.id !== threadId));\n    }).catch(error => {\n      console.error(\"Error deleting thread:\", error);\n    });\n  };\n  const [thread, setThread] = useState(\"\");\n  const [threadList, setThreadList] = useState([]);\n  const [replyData, setReplyData] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => {\n          setThreadList(data.threads);\n          setReplyData(data.threads.reduce((acc, thread) => {\n            thread.replies.forEach(reply => {\n              acc[reply.userId] = reply.name;\n            });\n            return acc;\n          }, {}));\n        }).catch(err => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread,\n        userId: localStorage.getItem(\"_id\"),\n        replies: []\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      setThreadList(data.threads);\n    }).catch(err => console.error(err));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createThread();\n    setThread(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"homeTitle\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"homeForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"thread\",\n            children: \"Title / Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"thread\",\n            required: true,\n            value: thread,\n            onChange: e => setThread(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"homeBtn\",\n          children: \"CREATE THREAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__container\",\n        children: threadList.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: thread.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react__container\",\n            children: [/*#__PURE__*/_jsxDEV(Likes, {\n              numberOfLikes: thread.likes.length,\n              threadId: thread.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comments, {\n              numberOfComments: thread.replies.length,\n              threadId: thread.id,\n              title: thread.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteBtn\",\n              onClick: () => deleteThread(thread.id),\n              children: \"Delete Thread\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"replies-container\",\n            children: thread.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: reply.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"reply-user\",\n                children: replyData[reply.userId]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)]\n            }, reply._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"ETdBbTNzs7SGngcr6av6mvNhxG8=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Likes","Comments","useNavigate","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","deleteThread","threadId","fetch","method","then","res","json","data","alert","message","setThreadList","prevThreadList","filter","thread","id","catch","error","console","setThread","threadList","replyData","setReplyData","navigate","checkUser","localStorage","getItem","threads","reduce","acc","replies","forEach","reply","userId","name","err","createThread","body","JSON","stringify","headers","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","required","value","onChange","target","map","title","numberOfLikes","likes","length","numberOfComments","onClick","text","_id","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited/client/src/components/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\n\nconst Home = () => {\n  const deleteThread = (threadId) => {\n    fetch(`http://localhost:4000/api/delete/thread/${threadId}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        setThreadList((prevThreadList) =>\n          prevThreadList.filter((thread) => thread.id !== threadId)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error deleting thread:\", error);\n      });\n  };\n\n  const [thread, setThread] = useState(\"\");\n  const [threadList, setThreadList] = useState([]);\n  const [replyData, setReplyData] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\")\n          .then((res) => res.json())\n          .then((data) => {\n            setThreadList(data.threads);\n            setReplyData(\n              data.threads.reduce((acc, thread) => {\n                thread.replies.forEach((reply) => {\n                  acc[reply.userId] = reply.name;\n                });\n                return acc;\n              }, {})\n            );\n          })\n          .catch((err) => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread,\n        userId: localStorage.getItem(\"_id\"),\n        replies: [],\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        setThreadList(data.threads);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createThread();\n    setThread(\"\");\n  };\n\n  return (\n    <>\n      <Nav />\n      <main className=\"home\">\n        <h2 className=\"homeTitle\">Create a Thread</h2>\n        <form className=\"homeForm\" onSubmit={handleSubmit}>\n          <div className=\"home__container\">\n            <label htmlFor=\"thread\">Title / Description</label>\n            <input\n              type=\"text\"\n              name=\"thread\"\n              required\n              value={thread}\n              onChange={(e) => setThread(e.target.value)}\n            />\n          </div>\n          <button className=\"homeBtn\">CREATE THREAD</button>\n        </form>\n\n        <div className=\"thread__container\">\n          {threadList.map((thread) => (\n            <div className=\"thread__item\" key={thread.id}>\n              <p>{thread.title}</p>\n              <div className=\"react__container\">\n                <Likes\n                  numberOfLikes={thread.likes.length}\n                  threadId={thread.id}\n                />\n                <Comments\n                  numberOfComments={thread.replies.length}\n                  threadId={thread.id}\n                  title={thread.title}\n                />\n                <button\n                  className=\"deleteBtn\"\n                  onClick={() => deleteThread(thread.id)}\n                >\n                  Delete Thread\n                </button>\n              </div>\n              <div className=\"replies-container\">\n                {thread.replies.map((reply) => (\n                  <div className=\"reply-item\" key={reply._id}>\n                    <p>{reply.text}</p>\n                    <p className=\"reply-user\">{replyData[reply.userId]}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}