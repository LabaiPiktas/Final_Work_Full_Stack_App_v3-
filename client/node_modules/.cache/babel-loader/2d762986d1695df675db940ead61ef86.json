{"ast":null,"code":"import { useState, useCallback } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\n\nfunction useEyeDropper() {\n  const [supported, setSupported] = useState(false);\n  useIsomorphicEffect(() => {\n    setSupported(typeof window !== \"undefined\" && \"EyeDropper\" in window);\n  }, []);\n  const open = useCallback(function () {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (supported) {\n      const eyeDropper = new window.EyeDropper();\n      return eyeDropper.open(options);\n    }\n\n    return void 0;\n  }, [supported]);\n  return {\n    supported,\n    open\n  };\n}\n\nexport { useEyeDropper };","map":{"version":3,"mappings":";;;AAEO,SAASA,aAAT,GAAyB;EAC9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;EACAC,mBAAmB,CAAC,MAAM;IACxBF,YAAY,CAAC,OAAOG,MAAP,KAAkB,WAAlB,IAAiC,gBAAgBA,MAAlD,CAAZ;EACD,CAFkB,EAEhB,EAFgB,CAAnB;EAGA,MAAMC,IAAI,GAAGC,WAAW,CAAC,YAAkB;IAAA,IAAjBC,OAAiB,uEAAP,EAAO;;IACzC,IAAIP,SAAJ,EAAe;MACb,MAAMQ,UAAU,GAAG,IAAIJ,MAAM,CAACK,UAAX,EAAnB;MACA,OAAOD,UAAU,CAACH,IAAX,CAAgBE,OAAhB,CAAP;IACD;;IACD,OAAO,KAAK,CAAZ;EACD,CANuB,EAMrB,CAACP,SAAD,CANqB,CAAxB;EAOA,OAAO;IAAEA,SAAF;IAAaK;EAAb,CAAP;AACF","names":["useEyeDropper","supported","setSupported","useState","useIsomorphicEffect","window","open","useCallback","options","eyeDropper","EyeDropper"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-eye-dropper\\use-eye-dropper.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\ninterface EyeDropperOpenOptions {\n  signal?: AbortSignal;\n}\n\nexport interface EyeDropperOpenReturnType {\n  sRGBHex: string;\n}\n\nexport function useEyeDropper() {\n  const [supported, setSupported] = useState(false);\n\n  useIsomorphicEffect(() => {\n    setSupported(typeof window !== 'undefined' && 'EyeDropper' in window);\n  }, []);\n\n  const open = useCallback(\n    (options: EyeDropperOpenOptions = {}): Promise<EyeDropperOpenReturnType> => {\n      if (supported) {\n        const eyeDropper = new (window as any).EyeDropper();\n        return eyeDropper.open(options);\n      }\n\n      return undefined;\n    },\n    [supported]\n  );\n\n  return { supported, open };\n}\n"]},"metadata":{},"sourceType":"module"}