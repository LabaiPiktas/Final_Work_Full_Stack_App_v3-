{"ast":null,"code":"import { findTabbableDescendants } from './tabbable.js';\n\nfunction scopeTab(node, event) {\n  const tabbable = findTabbableDescendants(node);\n\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode();\n  const leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n\n  if (!leavingFinalTabbable) {\n    return;\n  }\n\n  event.preventDefault();\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n\n  if (target) {\n    target.focus();\n  }\n}\n\nexport { scopeTab };","map":{"version":3,"mappings":";;AACO,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+B;EACpC,MAAMC,QAAQ,GAAGC,uBAAuB,CAACH,IAAD,CAAxC;;EACA,IAAI,CAACE,QAAQ,CAACE,MAAd,EAAsB;IACpBH,KAAK,CAACI,cAAN;IACA;EACD;;EACD,MAAMC,aAAa,GAAGJ,QAAQ,CAACD,KAAK,CAACM,QAAN,GAAiB,CAAjB,GAAqBL,QAAQ,CAACE,MAAT,GAAkB,CAAxC,CAA9B;EACA,MAAMI,IAAI,GAAGR,IAAI,CAACS,WAAL,EAAb;EACA,MAAMC,oBAAoB,GAAGJ,aAAa,KAAKE,IAAI,CAACG,aAAvB,IAAwCX,IAAI,KAAKQ,IAAI,CAACG,aAAnF;;EACA,IAAI,CAACD,oBAAL,EAA2B;IACzB;EACD;;EACDT,KAAK,CAACI,cAAN;EACA,MAAMO,MAAM,GAAGV,QAAQ,CAACD,KAAK,CAACM,QAAN,GAAiBL,QAAQ,CAACE,MAAT,GAAkB,CAAnC,GAAuC,CAAxC,CAAvB;;EACA,IAAIQ,MAAJ,EAAY;IACVA,MAAM,CAACC,KAAP;EACD;AACH","names":["scopeTab","node","event","tabbable","findTabbableDescendants","length","preventDefault","finalTabbable","shiftKey","root","getRootNode","leavingFinalTabbable","activeElement","target","focus"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-focus-trap\\scope-tab.ts"],"sourcesContent":["import { findTabbableDescendants } from './tabbable';\n\nexport function scopeTab(node: HTMLElement, event: KeyboardEvent) {\n  const tabbable = findTabbableDescendants(node);\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode() as unknown as DocumentOrShadowRoot;\n  const leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n\n  if (!leavingFinalTabbable) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n\n  if (target) {\n    target.focus();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}