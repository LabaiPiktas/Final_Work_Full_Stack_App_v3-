{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nfunction useDisclosure() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let callbacks = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    onOpen,\n    onClose\n  } = callbacks || {};\n  const [opened, setOpened] = useState(initialState);\n  const open = useCallback(() => {\n    setOpened(isOpened => {\n      if (!isOpened) {\n        onOpen == null ? void 0 : onOpen();\n        return true;\n      }\n\n      return isOpened;\n    });\n  }, [onOpen]);\n  const close = useCallback(() => {\n    setOpened(isOpened => {\n      if (isOpened) {\n        onClose == null ? void 0 : onClose();\n        return false;\n      }\n\n      return isOpened;\n    });\n  }, [onClose]);\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open,\n    close,\n    toggle\n  }];\n}\n\nexport { useDisclosure };","map":{"version":3,"mappings":";;AACO,SAASA,aAAT,GAAwD;EAAA,IAAjCC,YAAiC,uEAAlB,KAAkB;EAAA,IAAXC,SAAW;EAC7D,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,SAAS,IAAI,EAAzC;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAACN,YAAD,CAApC;EACA,MAAMO,IAAI,GAAGC,WAAW,CAAC,MAAM;IAC7BH,SAAS,CAAEI,QAAD,IAAc;MACtB,IAAI,CAACA,QAAL,EAAe;QACbP,MAAM,IAAI,IAAV,GAAiB,KAAK,CAAtB,GAA0BA,MAAM,EAAhC;QACA,OAAO,IAAP;MACD;;MACD,OAAOO,QAAP;IACD,CANQ,CAAT;EAOD,CARuB,EAQrB,CAACP,MAAD,CARqB,CAAxB;EASA,MAAMQ,KAAK,GAAGF,WAAW,CAAC,MAAM;IAC9BH,SAAS,CAAEI,QAAD,IAAc;MACtB,IAAIA,QAAJ,EAAc;QACZN,OAAO,IAAI,IAAX,GAAkB,KAAK,CAAvB,GAA2BA,OAAO,EAAlC;QACA,OAAO,KAAP;MACD;;MACD,OAAOM,QAAP;IACD,CANQ,CAAT;EAOD,CARwB,EAQtB,CAACN,OAAD,CARsB,CAAzB;EASA,MAAMQ,MAAM,GAAGH,WAAW,CAAC,MAAM;IAC/BJ,MAAM,GAAGM,KAAK,EAAR,GAAaH,IAAI,EAAvB;EACD,CAFyB,EAEvB,CAACG,KAAD,EAAQH,IAAR,EAAcH,MAAd,CAFuB,CAA1B;EAGA,OAAO,CAACA,MAAD,EAAS;IAAEG,IAAF;IAAQG,KAAR;IAAeC;EAAf,CAAT,CAAP;AACF","names":["useDisclosure","initialState","callbacks","onOpen","onClose","opened","setOpened","useState","open","useCallback","isOpened","close","toggle"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-disclosure\\use-disclosure.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport function useDisclosure(\n  initialState = false,\n  callbacks?: { onOpen?(): void; onClose?(): void }\n) {\n  const { onOpen, onClose } = callbacks || {};\n  const [opened, setOpened] = useState(initialState);\n\n  const open = useCallback(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [onOpen]);\n\n  const close = useCallback(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [onClose]);\n\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n\n  return [opened, { open, close, toggle }] as const;\n}\n"]},"metadata":{},"sourceType":"module"}