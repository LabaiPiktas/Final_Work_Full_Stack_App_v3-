{"ast":null,"code":"import { useRef } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.js';\nconst MIME_TYPES = {\n  ico: \"image/x-icon\",\n  png: \"image/png\",\n  svg: \"image/svg+xml\",\n  gif: \"image/gif\"\n};\n\nfunction useFavicon(url) {\n  const link = useRef();\n  useIsomorphicEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    if (!link.current) {\n      const existingElements = document.querySelectorAll('link[rel*=\"icon\"]');\n      existingElements.forEach(element2 => document.head.removeChild(element2));\n      const element = document.createElement(\"link\");\n      element.rel = \"shortcut icon\";\n      link.current = element;\n      document.querySelector(\"head\").appendChild(element);\n    }\n\n    const splittedUrl = url.split(\".\");\n    link.current.setAttribute(\"type\", MIME_TYPES[splittedUrl[splittedUrl.length - 1].toLowerCase()]);\n    link.current.setAttribute(\"href\", url);\n  }, [url]);\n}\n\nexport { useFavicon };","map":{"version":3,"mappings":";;AAEA,MAAMA,UAAU,GAAG;EACjBC,GAAG,EAAE,cADY;EAEjBC,GAAG,EAAE,WAFY;EAGjBC,GAAG,EAAE,eAHY;EAIjBC,GAAG,EAAE;AAJY,CAAnB;;AAMO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;EAC9B,MAAMC,IAAI,GAAGC,MAAM,EAAnB;EACAC,mBAAmB,CAAC,MAAM;IACxB,IAAI,CAACH,GAAL,EAAU;MACR;IACD;;IACD,IAAI,CAACC,IAAI,CAACG,OAAV,EAAmB;MACjB,MAAMC,gBAAgB,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,mBAA1B,CAAzB;MACAF,gBAAgB,CAACG,OAAjB,CAA0BC,QAAD,IAAcH,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BF,QAA1B,CAAvC;MACA,MAAMG,OAAO,GAAGN,QAAQ,CAACO,aAAT,CAAuB,MAAvB,CAAhB;MACAD,OAAO,CAACE,GAAR,GAAc,eAAd;MACAb,IAAI,CAACG,OAAL,GAAeQ,OAAf;MACAN,QAAQ,CAACS,aAAT,CAAuB,MAAvB,EAA+BC,WAA/B,CAA2CJ,OAA3C;IACD;;IACD,MAAMK,WAAW,GAAGjB,GAAG,CAACkB,KAAJ,CAAU,GAAV,CAApB;IACAjB,IAAI,CAACG,OAAL,CAAae,YAAb,CAA0B,MAA1B,EAAkCzB,UAAU,CAACuB,WAAW,CAACA,WAAW,CAACG,MAAZ,GAAqB,CAAtB,CAAX,CAAoCC,WAApC,EAAD,CAA5C;IACApB,IAAI,CAACG,OAAL,CAAae,YAAb,CAA0B,MAA1B,EAAkCnB,GAAlC;EACD,CAfkB,EAehB,CAACA,GAAD,CAfgB,CAAnB;AAgBF","names":["MIME_TYPES","ico","png","svg","gif","useFavicon","url","link","useRef","useIsomorphicEffect","current","existingElements","document","querySelectorAll","forEach","element2","head","removeChild","element","createElement","rel","querySelector","appendChild","splittedUrl","split","setAttribute","length","toLowerCase"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-favicon\\use-favicon.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nconst MIME_TYPES = {\n  ico: 'image/x-icon',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  gif: 'image/gif',\n};\n\nexport function useFavicon(url: string) {\n  const link = useRef<HTMLLinkElement>();\n\n  useIsomorphicEffect(() => {\n    if (!url) {\n      return;\n    }\n\n    if (!link.current) {\n      const existingElements = document.querySelectorAll<HTMLLinkElement>('link[rel*=\"icon\"]');\n      existingElements.forEach((element) => document.head.removeChild(element));\n\n      const element = document.createElement('link');\n      element.rel = 'shortcut icon';\n      link.current = element;\n      document.querySelector('head').appendChild(element);\n    }\n\n    const splittedUrl = url.split('.');\n    link.current.setAttribute(\n      'type',\n      MIME_TYPES[splittedUrl[splittedUrl.length - 1].toLowerCase()]\n    );\n    link.current.setAttribute('href', url);\n  }, [url]);\n}\n"]},"metadata":{},"sourceType":"module"}