{"ast":null,"code":"import { createStyles, MANTINE_SIZES } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst getColumnFlexBasis = (colSpan, columns) => {\n  if (colSpan === \"content\") {\n    return \"auto\";\n  }\n\n  if (colSpan === \"auto\") {\n    return \"0px\";\n  }\n\n  return colSpan ? `${100 / (columns / colSpan)}%` : void 0;\n};\n\nconst getColumnMaxWidth = (colSpan, columns, grow) => {\n  if (grow || colSpan === \"auto\" || colSpan === \"content\") {\n    return \"unset\";\n  }\n\n  return getColumnFlexBasis(colSpan, columns);\n};\n\nconst getColumnFlexGrow = (colSpan, grow) => {\n  if (!colSpan) {\n    return void 0;\n  }\n\n  return colSpan === \"auto\" || grow ? 1 : 0;\n};\n\nconst getColumnOffset = (offset, columns) => offset === 0 ? 0 : offset ? `${100 / (columns / offset)}%` : void 0;\n\nconst getGutterSize = (gutter, theme) => typeof gutter !== \"undefined\" ? theme.fn.size({\n  size: gutter,\n  sizes: theme.spacing\n}) / 2 : void 0;\n\nfunction getBreakpointsStyles(_ref) {\n  let {\n    sizes,\n    offsets,\n    orders,\n    theme,\n    columns,\n    gutters,\n    grow\n  } = _ref;\n  return MANTINE_SIZES.reduce((acc, size) => {\n    acc[`@media (min-width: ${theme.breakpoints[size]}px)`] = {\n      order: orders[size],\n      flexBasis: getColumnFlexBasis(sizes[size], columns),\n      padding: getGutterSize(gutters[size], theme),\n      flexShrink: 0,\n      width: sizes[size] === \"content\" ? \"auto\" : void 0,\n      maxWidth: getColumnMaxWidth(sizes[size], columns, grow),\n      marginLeft: getColumnOffset(offsets[size], columns),\n      flexGrow: getColumnFlexGrow(sizes[size], grow)\n    };\n    return acc;\n  }, {});\n}\n\nvar useStyles = createStyles((theme, _ref2) => {\n  let {\n    gutter,\n    gutterXs,\n    gutterSm,\n    gutterMd,\n    gutterLg,\n    gutterXl,\n    grow,\n    offset,\n    offsetXs,\n    offsetSm,\n    offsetMd,\n    offsetLg,\n    offsetXl,\n    columns,\n    span,\n    xs,\n    sm,\n    md,\n    lg,\n    xl,\n    order,\n    orderXs,\n    orderSm,\n    orderMd,\n    orderLg,\n    orderXl\n  } = _ref2;\n  return {\n    col: __spreadValues({\n      boxSizing: \"border-box\",\n      flexGrow: getColumnFlexGrow(span, grow),\n      order,\n      padding: getGutterSize(gutter, theme),\n      marginLeft: getColumnOffset(offset, columns),\n      flexBasis: getColumnFlexBasis(span, columns),\n      flexShrink: 0,\n      width: span === \"content\" ? \"auto\" : void 0,\n      maxWidth: getColumnMaxWidth(span, columns, grow)\n    }, getBreakpointsStyles({\n      sizes: {\n        xs,\n        sm,\n        md,\n        lg,\n        xl\n      },\n      offsets: {\n        xs: offsetXs,\n        sm: offsetSm,\n        md: offsetMd,\n        lg: offsetLg,\n        xl: offsetXl\n      },\n      orders: {\n        xs: orderXs,\n        sm: orderSm,\n        md: orderMd,\n        lg: orderLg,\n        xl: orderXl\n      },\n      gutters: {\n        xs: gutterXs,\n        sm: gutterSm,\n        md: gutterMd,\n        lg: gutterLg,\n        xl: gutterXl\n      },\n      theme,\n      columns,\n      grow\n    }))\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":";AAAA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAvB;AACA,IAAIC,mBAAmB,GAAGF,MAAM,CAACG,qBAAjC;AACA,IAAIC,YAAY,GAAGJ,MAAM,CAACK,SAAP,CAAiBC,cAApC;AACA,IAAIC,YAAY,GAAGP,MAAM,CAACK,SAAP,CAAiBG,oBAApC;;AACA,IAAIC,eAAe,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,KAAX,KAAqBD,GAAG,IAAID,GAAP,GAAaX,SAAS,CAACW,GAAD,EAAMC,GAAN,EAAW;EAAEE,UAAU,EAAE,IAAd;EAAoBC,YAAY,EAAE,IAAlC;EAAwCC,QAAQ,EAAE,IAAlD;EAAwDH;AAAxD,CAAX,CAAtB,GAAoGF,GAAG,CAACC,GAAD,CAAH,GAAWC,KAA1J;;AACA,IAAII,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;EAC7B,KAAK,IAAIC,IAAT,IAAiBD,CAAC,KAAKA,CAAC,GAAG,EAAT,CAAlB,EACE,IAAId,YAAY,CAACgB,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;;EACJ,IAAIjB,mBAAJ,EACE,KAAK,IAAIiB,IAAT,IAAiBjB,mBAAmB,CAACgB,CAAD,CAApC,EAAyC;IACvC,IAAIX,YAAY,CAACa,IAAb,CAAkBF,CAAlB,EAAqBC,IAArB,CAAJ,EACEV,eAAe,CAACQ,CAAD,EAAIE,IAAJ,EAAUD,CAAC,CAACC,IAAD,CAAX,CAAf;EACH;EACH,OAAOF,CAAP;AACD,CAVD;;AAeA,MAAMI,kBAAkB,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;EAC/C,IAAID,OAAO,KAAK,SAAhB,EAA2B;IACzB,OAAO,MAAP;EACD;;EACD,IAAIA,OAAO,KAAK,MAAhB,EAAwB;IACtB,OAAO,KAAP;EACD;;EACD,OAAOA,OAAO,GAAI,GAAE,OAAOC,OAAO,GAAGD,OAAjB,CAA0B,GAAhC,GAAqC,KAAK,CAAxD;AACD,CARD;;AASA,MAAME,iBAAiB,GAAG,CAACF,OAAD,EAAUC,OAAV,EAAmBE,IAAnB,KAA4B;EACpD,IAAIA,IAAI,IAAIH,OAAO,KAAK,MAApB,IAA8BA,OAAO,KAAK,SAA9C,EAAyD;IACvD,OAAO,OAAP;EACD;;EACD,OAAOD,kBAAkB,CAACC,OAAD,EAAUC,OAAV,CAAzB;AACD,CALD;;AAMA,MAAMG,iBAAiB,GAAG,CAACJ,OAAD,EAAUG,IAAV,KAAmB;EAC3C,IAAI,CAACH,OAAL,EAAc;IACZ,OAAO,KAAK,CAAZ;EACD;;EACD,OAAOA,OAAO,KAAK,MAAZ,IAAsBG,IAAtB,GAA6B,CAA7B,GAAiC,CAAxC;AACD,CALD;;AAMA,MAAME,eAAe,GAAG,CAACC,MAAD,EAASL,OAAT,KAAqBK,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAAM,GAAI,GAAE,OAAOL,OAAO,GAAGK,MAAjB,CAAyB,GAA/B,GAAoC,KAAK,CAA/G;;AACA,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB,OAAOD,MAAP,KAAkB,WAAlB,GAAgCC,KAAK,CAACC,EAAN,CAASC,IAAT,CAAc;EAAEA,IAAI,EAAEH,MAAR;EAAgBI,KAAK,EAAEH,KAAK,CAACI;AAA7B,CAAd,IAAwD,CAAxF,GAA4F,KAAK,CAA1I;;AACA,SAASC,oBAAT,OAQG;EAAA,IAR2B;IAC5BF,KAD4B;IAE5BG,OAF4B;IAG5BC,MAH4B;IAI5BP,KAJ4B;IAK5BR,OAL4B;IAM5BgB,OAN4B;IAO5Bd;EAP4B,CAQ3B;EACD,OAAOe,aAAa,CAACC,MAAd,CAAqB,CAACC,GAAD,EAAMT,IAAN,KAAe;IACzCS,GAAG,CAAE,sBAAqBX,KAAK,CAACY,WAAN,CAAkBV,IAAlB,CAAwB,KAA/C,CAAH,GAA0D;MACxDW,KAAK,EAAEN,MAAM,CAACL,IAAD,CAD2C;MAExDY,SAAS,EAAExB,kBAAkB,CAACa,KAAK,CAACD,IAAD,CAAN,EAAcV,OAAd,CAF2B;MAGxDuB,OAAO,EAAEjB,aAAa,CAACU,OAAO,CAACN,IAAD,CAAR,EAAgBF,KAAhB,CAHkC;MAIxDgB,UAAU,EAAE,CAJ4C;MAKxDC,KAAK,EAAEd,KAAK,CAACD,IAAD,CAAL,KAAgB,SAAhB,GAA4B,MAA5B,GAAqC,KAAK,CALO;MAMxDgB,QAAQ,EAAEzB,iBAAiB,CAACU,KAAK,CAACD,IAAD,CAAN,EAAcV,OAAd,EAAuBE,IAAvB,CAN6B;MAOxDyB,UAAU,EAAEvB,eAAe,CAACU,OAAO,CAACJ,IAAD,CAAR,EAAgBV,OAAhB,CAP6B;MAQxD4B,QAAQ,EAAEzB,iBAAiB,CAACQ,KAAK,CAACD,IAAD,CAAN,EAAcR,IAAd;IAR6B,CAA1D;IAUA,OAAOiB,GAAP;EACD,CAZM,EAYJ,EAZI,CAAP;AAaD;;AACD,gBAAeU,YAAY,CAAC,CAACrB,KAAD;EAAA,IAAQ;IAClCD,MADkC;IAElCuB,QAFkC;IAGlCC,QAHkC;IAIlCC,QAJkC;IAKlCC,QALkC;IAMlCC,QANkC;IAOlChC,IAPkC;IAQlCG,MARkC;IASlC8B,QATkC;IAUlCC,QAVkC;IAWlCC,QAXkC;IAYlCC,QAZkC;IAalCC,QAbkC;IAclCvC,OAdkC;IAelCwC,IAfkC;IAgBlCC,EAhBkC;IAiBlCC,EAjBkC;IAkBlCC,EAlBkC;IAmBlCC,EAnBkC;IAoBlCC,EApBkC;IAqBlCxB,KArBkC;IAsBlCyB,OAtBkC;IAuBlCC,OAvBkC;IAwBlCC,OAxBkC;IAyBlCC,OAzBkC;IA0BlCC;EA1BkC,CAAR;EAAA,OA2BrB;IACLC,GAAG,EAAE1D,cAAc,CAAC;MAClB2D,SAAS,EAAE,YADO;MAElBxB,QAAQ,EAAEzB,iBAAiB,CAACqC,IAAD,EAAOtC,IAAP,CAFT;MAGlBmB,KAHkB;MAIlBE,OAAO,EAAEjB,aAAa,CAACC,MAAD,EAASC,KAAT,CAJJ;MAKlBmB,UAAU,EAAEvB,eAAe,CAACC,MAAD,EAASL,OAAT,CALT;MAMlBsB,SAAS,EAAExB,kBAAkB,CAAC0C,IAAD,EAAOxC,OAAP,CANX;MAOlBwB,UAAU,EAAE,CAPM;MAQlBC,KAAK,EAAEe,IAAI,KAAK,SAAT,GAAqB,MAArB,GAA8B,KAAK,CARxB;MASlBd,QAAQ,EAAEzB,iBAAiB,CAACuC,IAAD,EAAOxC,OAAP,EAAgBE,IAAhB;IATT,CAAD,EAUhBW,oBAAoB,CAAC;MACtBF,KAAK,EAAE;QAAE8B,EAAF;QAAMC,EAAN;QAAUC,EAAV;QAAcC,EAAd;QAAkBC;MAAlB,CADe;MAEtB/B,OAAO,EAAE;QAAE2B,EAAE,EAAEN,QAAN;QAAgBO,EAAE,EAAEN,QAApB;QAA8BO,EAAE,EAAEN,QAAlC;QAA4CO,EAAE,EAAEN,QAAhD;QAA0DO,EAAE,EAAEN;MAA9D,CAFa;MAGtBxB,MAAM,EAAE;QAAE0B,EAAE,EAAEK,OAAN;QAAeJ,EAAE,EAAEK,OAAnB;QAA4BJ,EAAE,EAAEK,OAAhC;QAAyCJ,EAAE,EAAEK,OAA7C;QAAsDJ,EAAE,EAAEK;MAA1D,CAHc;MAItBlC,OAAO,EAAE;QAAEyB,EAAE,EAAEX,QAAN;QAAgBY,EAAE,EAAEX,QAApB;QAA8BY,EAAE,EAAEX,QAAlC;QAA4CY,EAAE,EAAEX,QAAhD;QAA0DY,EAAE,EAAEX;MAA9D,CAJa;MAKtB1B,KALsB;MAMtBR,OANsB;MAOtBE;IAPsB,CAAD,CAVJ;EADd,CA3BqB;AAAA,CAAD,CAA3B","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","getColumnFlexBasis","colSpan","columns","getColumnMaxWidth","grow","getColumnFlexGrow","getColumnOffset","offset","getGutterSize","gutter","theme","fn","size","sizes","spacing","getBreakpointsStyles","offsets","orders","gutters","MANTINE_SIZES","reduce","acc","breakpoints","order","flexBasis","padding","flexShrink","width","maxWidth","marginLeft","flexGrow","createStyles","gutterXs","gutterSm","gutterMd","gutterLg","gutterXl","offsetXs","offsetSm","offsetMd","offsetLg","offsetXl","span","xs","sm","md","lg","xl","orderXs","orderSm","orderMd","orderLg","orderXl","col","boxSizing"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\core\\src\\Grid\\Col\\Col.styles.ts"],"sourcesContent":["import {\n  createStyles,\n  MantineNumberSize,\n  MANTINE_SIZES,\n  MantineSize,\n  MantineTheme,\n} from '@mantine/styles';\n\nexport type ColSpan = number | 'auto' | 'content';\n\ninterface ColStyles {\n  gutter: MantineNumberSize;\n  gutterXs: MantineNumberSize;\n  gutterSm: MantineNumberSize;\n  gutterMd: MantineNumberSize;\n  gutterLg: MantineNumberSize;\n  gutterXl: MantineNumberSize;\n  columns: number;\n  grow: boolean;\n  offset: number;\n  offsetXs: number;\n  offsetSm: number;\n  offsetMd: number;\n  offsetLg: number;\n  offsetXl: number;\n  span: ColSpan;\n  xs: ColSpan;\n  sm: ColSpan;\n  md: ColSpan;\n  lg: ColSpan;\n  xl: ColSpan;\n  order: React.CSSProperties['order'];\n  orderXs: React.CSSProperties['order'];\n  orderSm: React.CSSProperties['order'];\n  orderMd: React.CSSProperties['order'];\n  orderLg: React.CSSProperties['order'];\n  orderXl: React.CSSProperties['order'];\n}\n\nconst getColumnFlexBasis = (colSpan: ColSpan, columns: number) => {\n  if (colSpan === 'content') {\n    return 'auto';\n  }\n  if (colSpan === 'auto') {\n    return '0px';\n  }\n  return colSpan ? `${100 / (columns / colSpan)}%` : undefined;\n};\n\nconst getColumnMaxWidth = (colSpan: ColSpan, columns: number, grow: boolean) => {\n  if (grow || colSpan === 'auto' || colSpan === 'content') {\n    return 'unset';\n  }\n  return getColumnFlexBasis(colSpan, columns);\n};\n\nconst getColumnFlexGrow = (colSpan: ColSpan, grow: boolean) => {\n  if (!colSpan) {\n    return undefined;\n  }\n  return colSpan === 'auto' || grow ? 1 : 0;\n};\n\nconst getColumnOffset = (offset: number, columns: number) =>\n  offset === 0 ? 0 : offset ? `${100 / (columns / offset)}%` : undefined;\n\nconst getGutterSize = (gutter: MantineNumberSize, theme: MantineTheme) =>\n  typeof gutter !== 'undefined'\n    ? theme.fn.size({ size: gutter, sizes: theme.spacing }) / 2\n    : undefined;\n\nfunction getBreakpointsStyles({\n  sizes,\n  offsets,\n  orders,\n  theme,\n  columns,\n  gutters,\n  grow,\n}: {\n  sizes: Record<MantineSize, ColSpan>;\n  offsets: Record<MantineSize, number>;\n  orders: Record<MantineSize, React.CSSProperties['order']>;\n  gutters: Record<MantineSize, MantineNumberSize>;\n  grow: boolean;\n  theme: MantineTheme;\n  columns: number;\n}) {\n  return MANTINE_SIZES.reduce((acc, size) => {\n    acc[`@media (min-width: ${theme.breakpoints[size]}px)`] = {\n      order: orders[size],\n      flexBasis: getColumnFlexBasis(sizes[size], columns),\n      padding: getGutterSize(gutters[size], theme),\n      flexShrink: 0,\n      width: sizes[size] === 'content' ? 'auto' : undefined,\n      maxWidth: getColumnMaxWidth(sizes[size], columns, grow),\n      marginLeft: getColumnOffset(offsets[size], columns),\n      flexGrow: getColumnFlexGrow(sizes[size], grow),\n    };\n    return acc;\n  }, {});\n}\n\nexport default createStyles(\n  (\n    theme,\n    {\n      gutter,\n      gutterXs,\n      gutterSm,\n      gutterMd,\n      gutterLg,\n      gutterXl,\n      grow,\n      offset,\n      offsetXs,\n      offsetSm,\n      offsetMd,\n      offsetLg,\n      offsetXl,\n      columns,\n      span,\n      xs,\n      sm,\n      md,\n      lg,\n      xl,\n      order,\n      orderXs,\n      orderSm,\n      orderMd,\n      orderLg,\n      orderXl,\n    }: ColStyles\n  ) => ({\n    col: {\n      boxSizing: 'border-box',\n      flexGrow: getColumnFlexGrow(span, grow),\n      order,\n      padding: getGutterSize(gutter, theme),\n      marginLeft: getColumnOffset(offset, columns),\n      flexBasis: getColumnFlexBasis(span, columns),\n      flexShrink: 0,\n      width: span === 'content' ? 'auto' : undefined,\n      maxWidth: getColumnMaxWidth(span, columns, grow),\n      ...getBreakpointsStyles({\n        sizes: { xs, sm, md, lg, xl },\n        offsets: { xs: offsetXs, sm: offsetSm, md: offsetMd, lg: offsetLg, xl: offsetXl },\n        orders: { xs: orderXs, sm: orderSm, md: orderMd, lg: orderLg, xl: orderXl },\n        gutters: { xs: gutterXs, sm: gutterSm, md: gutterMd, lg: gutterLg, xl: gutterXl },\n        theme,\n        columns,\n        grow,\n      }),\n    },\n  })\n);\n"]},"metadata":{},"sourceType":"module"}