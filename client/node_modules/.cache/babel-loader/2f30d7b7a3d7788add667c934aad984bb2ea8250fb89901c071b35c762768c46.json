{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\man_t\\\\OneDrive\\\\dokumentai\\\\GitHub\\\\Final_Work_Full_Stack_App_v3-\\\\client\\\\src\\\\components\\\\QuestionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [sortedQuestions, setSortedQuestions] = useState([]);\n  const [sortByDate, setSortByDate] = useState(false);\n  const [sortByAnswerCount, setSortByAnswerCount] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [showAnsweredQuestions, setShowAnsweredQuestions] = useState(false);\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/all/threads\");\n        const data = await response.json();\n        console.log(\"Data received from the server:\", data); // Check the data received\n        setQuestions(data.threads);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    let sortedQuestions = [...questions]; // Copy the original questions array\n\n    if (showAnsweredQuestions) {\n      sortedQuestions = sortedQuestions.filter(question => question.replies.length > 0);\n    } else {\n      sortedQuestions = sortedQuestions.filter(question => question.replies.length === 0);\n    }\n    if (sortByDate) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by question date\n        const dateA = new Date(a.timestamp);\n        const dateB = new Date(b.timestamp);\n        if (sortOrder === \"asc\") {\n          return dateA - dateB; // Ascending order\n        } else {\n          return dateB - dateA; // Descending order\n        }\n      });\n    }\n\n    if (sortByAnswerCount) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by answer count\n        if (sortOrder === \"asc\") {\n          return a.replies.length - b.replies.length; // Ascending order\n        } else {\n          return b.replies.length - a.replies.length; // Descending order\n        }\n      });\n    }\n\n    // Set the updated sorted and filtered questions arrays\n    setSortedQuestions(sortedQuestions);\n    setFilteredQuestions(sortedQuestions);\n  }, [questions, showAnsweredQuestions, sortByDate, sortByAnswerCount, sortOrder]);\n  const handleSortByDate = () => {\n    setSortByDate(true);\n    setSortByAnswerCount(false);\n  };\n  const handleSortByAnswerCount = () => {\n    setSortByDate(false);\n    setSortByAnswerCount(true);\n  };\n  const handleSortOrder = order => {\n    setSortOrder(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Klausim\\u0173 s\\u0105ra\\u0161as\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionListButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortByDate,\n        className: \"modalBtn\",\n        children: \"Rikiuoti pagal dat\\u0105\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortByAnswerCount,\n        className: \"modalBtn\",\n        children: \"Rikiuoti pagal atsakym\\u0173 skai\\u010Di\\u0173\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortOrder(\"asc\"),\n        className: \"modalBtn\",\n        children: \"Did\\u0117jimo tvarka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortOrder(\"desc\"),\n        className: \"modalBtn\",\n        children: \"Ma\\u017E\\u0117jimo tvarka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAnsweredQuestions(!showAnsweredQuestions),\n        className: \"modalBtn\",\n        children: showAnsweredQuestions ? \"Rodyti neatsakytus klausimus\" : \"Rodyti atsakytus klausimus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"modalBtn\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Atsakym\\u0173 skai\\u010Dius: \", question.replies.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Klausimo data: \", question.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/answers/${question.id}`,\n          className: \"modalBtn\",\n          children: \"See Answers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"Pb0PE3+lq6a6VXNIVz0lYaTcNns=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","jsxDEV","_jsxDEV","QuestionsList","_s","questions","setQuestions","sortedQuestions","setSortedQuestions","sortByDate","setSortByDate","sortByAnswerCount","setSortByAnswerCount","sortOrder","setSortOrder","showAnsweredQuestions","setShowAnsweredQuestions","filteredQuestions","setFilteredQuestions","id","navigate","fetchQuestions","response","fetch","data","json","console","log","threads","error","filter","question","replies","length","sort","a","b","dateA","Date","timestamp","dateB","handleSortByDate","handleSortByAnswerCount","handleSortOrder","order","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","to","map","title","_c","$RefreshReg$"],"sources":["C:/Users/man_t/OneDrive/dokumentai/GitHub/Final_Work_Full_Stack_App_v3-/client/src/components/QuestionsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\n\nconst QuestionsList = () => {\n  const [questions, setQuestions] = useState([]);\n  const [sortedQuestions, setSortedQuestions] = useState([]);\n  const [sortByDate, setSortByDate] = useState(false);\n  const [sortByAnswerCount, setSortByAnswerCount] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [showAnsweredQuestions, setShowAnsweredQuestions] = useState(false);\n  const [filteredQuestions, setFilteredQuestions] = useState([]);\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/all/threads\");\n        const data = await response.json();\n        console.log(\"Data received from the server:\", data); // Check the data received\n        setQuestions(data.threads);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n\n    fetchQuestions();\n  }, []);\n\n  useEffect(() => {\n    let sortedQuestions = [...questions]; // Copy the original questions array\n\n    if (showAnsweredQuestions) {\n      sortedQuestions = sortedQuestions.filter(\n        (question) => question.replies.length > 0\n      );\n    } else {\n      sortedQuestions = sortedQuestions.filter(\n        (question) => question.replies.length === 0\n      );\n    }\n\n    if (sortByDate) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by question date\n        const dateA = new Date(a.timestamp);\n        const dateB = new Date(b.timestamp);\n\n        if (sortOrder === \"asc\") {\n          return dateA - dateB; // Ascending order\n        } else {\n          return dateB - dateA; // Descending order\n        }\n      });\n    }\n\n    if (sortByAnswerCount) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by answer count\n        if (sortOrder === \"asc\") {\n          return a.replies.length - b.replies.length; // Ascending order\n        } else {\n          return b.replies.length - a.replies.length; // Descending order\n        }\n      });\n    }\n\n    // Set the updated sorted and filtered questions arrays\n    setSortedQuestions(sortedQuestions);\n    setFilteredQuestions(sortedQuestions);\n  }, [\n    questions,\n    showAnsweredQuestions,\n    sortByDate,\n    sortByAnswerCount,\n    sortOrder,\n  ]);\n\n  const handleSortByDate = () => {\n    setSortByDate(true);\n    setSortByAnswerCount(false);\n  };\n\n  const handleSortByAnswerCount = () => {\n    setSortByDate(false);\n    setSortByAnswerCount(true);\n  };\n\n  const handleSortOrder = (order) => {\n    setSortOrder(order);\n  };\n\n  return (\n    <div>\n      <h1>Klausimų sąrašas</h1>\n\n      <div className=\"QuestionListButtonContainer\">\n        <button onClick={handleSortByDate} className=\"modalBtn\">\n          Rikiuoti pagal datą\n        </button>\n        <button onClick={handleSortByAnswerCount} className=\"modalBtn\">\n          Rikiuoti pagal atsakymų skaičių\n        </button>\n        <button onClick={() => handleSortOrder(\"asc\")} className=\"modalBtn\">\n          Didėjimo tvarka\n        </button>\n        <button onClick={() => handleSortOrder(\"desc\")} className=\"modalBtn\">\n          Mažėjimo tvarka\n        </button>\n        <button\n          onClick={() => setShowAnsweredQuestions(!showAnsweredQuestions)}\n          className=\"modalBtn\"\n        >\n          {showAnsweredQuestions\n            ? \"Rodyti neatsakytus klausimus\"\n            : \"Rodyti atsakytus klausimus\"}\n        </button>\n\n        <Link to=\"/dashboard\" className=\"modalBtn\">\n          Create a Thread\n        </Link>\n      </div>\n\n      <div>\n        {filteredQuestions.map((question) => (\n          <div key={question.id}>\n            {/* Display question information */}\n            <h3>{question.title}</h3>\n            <p>Atsakymų skaičius: {question.replies.length}</p>\n            <p>Klausimo data: {question.timestamp}</p>\n            <Link to={`/answers/${question.id}`} className=\"modalBtn\">\n              See Answers\n            </Link>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}