{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Instrument\\u0173 skyrius\\\\Desktop\\\\Final_Work_Full_Stack_App\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const deleteThread = threadId => {\n    fetch(`http://localhost:4000/api/delete/thread/${threadId}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      setThreadList(prevThreadList => prevThreadList.filter(thread => thread.id !== threadId));\n    }).catch(error => {\n      console.error(\"Error deleting thread:\", error);\n    });\n  };\n  const handleEdit = threadId => {\n    const newText = prompt(\"Enter the new text:\");\n    if (newText) {\n      editThread(threadId, newText).then(updatedThread => {\n        setThreadList(prevThreadList => prevThreadList.map(thread => thread.id === threadId ? {\n          ...updatedThread,\n          edited: true\n        } : thread));\n        alert(\"Thread edited successfully!\");\n      }).catch(error => {\n        console.error(\"Error editing thread:\", error);\n      });\n    }\n  };\n  const editThread = (threadId, newText) => {\n    return fetch(`http://localhost:4000/api/edit/thread/${threadId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        newText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.thread) {\n        return data.thread;\n      } else {\n        throw new Error(data.error_message);\n      }\n    });\n  };\n  const [thread, setThread] = useState({\n    text: \"\"\n  });\n  const [threadList, setThreadList] = useState([]);\n  const [editedThreads, setEditedThreads] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    setEditedThreads([]);\n  }, [threadList]);\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => setThreadList(data.threads)).catch(err => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread.text,\n        userId: localStorage.getItem(\"_id\"),\n        replies: [],\n        edited: false // Pridėtas naujas laukas \"edited\"\n      }),\n\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => setThreadList(data.threads)).catch(err => console.error(err));\n    }).catch(err => console.error(err));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createThread();\n    setThread({\n      text: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"homeTitle\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"homeForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"thread\",\n            children: \"Title / Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"thread\",\n            required: true,\n            value: thread.text,\n            onChange: e => setThread({\n              ...thread,\n              text: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"homeBtn\",\n          children: \"CREATE THREAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__container\",\n        children: threadList.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thread__item ${editedThreads.includes(thread.id) ? \"edited\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: thread.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react__container\",\n            children: [/*#__PURE__*/_jsxDEV(Likes, {\n              numberOfLikes: thread.likes.length,\n              threadId: thread.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comments, {\n              numberOfComments: thread.replies.length,\n              threadId: thread.id,\n              title: thread.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => deleteThread(thread.id),\n                children: \"Delete Thread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), !thread.edited &&\n              /*#__PURE__*/\n              // Tik jei klausimas nebuvo redaguotas\n              _jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => handleEdit(thread.id),\n                children: \"Edit Thread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"+gc6saALYcyLxARprxoZZt74vIE=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Likes","Comments","useNavigate","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","deleteThread","threadId","fetch","method","then","res","json","data","alert","message","setThreadList","prevThreadList","filter","thread","id","catch","error","console","handleEdit","newText","prompt","editThread","updatedThread","map","edited","body","JSON","stringify","headers","Error","error_message","setThread","text","threadList","editedThreads","setEditedThreads","navigate","checkUser","localStorage","getItem","threads","err","createThread","userId","replies","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","name","required","value","onChange","target","includes","title","numberOfLikes","likes","length","numberOfComments","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Instrumentų skyrius/Desktop/Final_Work_Full_Stack_App/client/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\n\nconst Home = () => {\n  const deleteThread = (threadId) => {\n    fetch(`http://localhost:4000/api/delete/thread/${threadId}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        setThreadList((prevThreadList) =>\n          prevThreadList.filter((thread) => thread.id !== threadId)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error deleting thread:\", error);\n      });\n  };\n\n  const handleEdit = (threadId) => {\n    const newText = prompt(\"Enter the new text:\");\n    if (newText) {\n      editThread(threadId, newText)\n        .then((updatedThread) => {\n          setThreadList((prevThreadList) =>\n            prevThreadList.map((thread) =>\n              thread.id === threadId ? { ...updatedThread, edited: true } : thread\n            )\n          );\n          alert(\"Thread edited successfully!\");\n        })\n        .catch((error) => {\n          console.error(\"Error editing thread:\", error);\n        });\n    }\n  };\n  \n  const editThread = (threadId, newText) => {\n    return fetch(`http://localhost:4000/api/edit/thread/${threadId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        newText,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.thread) {\n          return data.thread;\n        } else {\n          throw new Error(data.error_message);\n        }\n      });\n  };\n\n  const [thread, setThread] = useState({ text: \"\" });\n  const [threadList, setThreadList] = useState([]);\n  const [editedThreads, setEditedThreads] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setEditedThreads([]);\n  }, [threadList]);\n\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\")\n          .then((res) => res.json())\n          .then((data) => setThreadList(data.threads))\n          .catch((err) => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread.text,\n        userId: localStorage.getItem(\"_id\"),\n        replies: [],\n        edited: false, // Pridėtas naujas laukas \"edited\"\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        fetch(\"http://localhost:4000/api/all/threads\")\n          .then((res) => res.json())\n          .then((data) => setThreadList(data.threads))\n          .catch((err) => console.error(err));\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createThread();\n    setThread({ text: \"\" });\n  };\n\n  return (\n    <>\n      <Nav />\n      <main className=\"home\">\n        <h2 className=\"homeTitle\">Create a Thread</h2>\n        <form className=\"homeForm\" onSubmit={handleSubmit}>\n          <div className=\"home__container\">\n            <label htmlFor=\"thread\">Title / Description</label>\n            <input\n              type=\"text\"\n              name=\"thread\"\n              required\n              value={thread.text}\n              onChange={(e) => setThread({ ...thread, text: e.target.value })}\n            />\n          </div>\n          <button className=\"homeBtn\">CREATE THREAD</button>\n        </form>\n\n        <div className=\"thread__container\">\n          {threadList.map((thread) => (\n            <div\n              className={`thread__item ${editedThreads.includes(thread.id) ? \"edited\" : \"\"}`}\n              key={thread.id}\n            >\n              <p>{thread.title}</p>\n              <div className=\"react__container\">\n                <Likes numberOfLikes={thread.likes.length} threadId={thread.id} />\n                <Comments\n                  numberOfComments={thread.replies.length}\n                  threadId={thread.id}\n                  title={thread.title}\n                />\n                {localStorage.getItem(\"_id\") && (\n                  <>\n                    <button\n                      className=\"modalBtn\"\n                      onClick={() => deleteThread(thread.id)}\n                    >\n                      Delete Thread\n                    </button>\n                    {!thread.edited && ( // Tik jei klausimas nebuvo redaguotas\n                      <button\n                        className=\"modalBtn\"\n                        onClick={() => handleEdit(thread.id)}\n                      >\n                        Edit Thread\n                      </button>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}