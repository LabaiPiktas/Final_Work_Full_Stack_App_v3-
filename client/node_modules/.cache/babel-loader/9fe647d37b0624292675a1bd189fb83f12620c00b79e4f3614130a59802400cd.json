{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\man_t\\\\OneDrive\\\\dokumentai\\\\GitHub\\\\Final_Work_Full_Stack_App_v3-\\\\client\\\\src\\\\components\\\\QuestionAnswers.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionAnswers = () => {\n  _s();\n  var _question$replies;\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState(null);\n  useEffect(() => {\n    console.log(\"Question ID:\", id); // Patikrinkite, ar gaunate teisingą ID\n    const fetchQuestion = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/thread/${id}`);\n        const data = await response.json();\n        console.log(\"Question data received from the server:\", data); // Check the data received\n        setQuestion(data.threads);\n      } catch (error) {\n        console.error(\"Error fetching question:\", error);\n      }\n    };\n    fetchQuestion();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Question Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), question ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question Content: \", question.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Number of Replies: \", ((_question$replies = question.replies) === null || _question$replies === void 0 ? void 0 : _question$replies.length) || 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Replies:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), question.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Reply Text: \", reply.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"User ID: \", reply.userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Timestamp: \", reply.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading question answers...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionAnswers, \"K2C3avHt14lIf4ViqAMCE8AUcHY=\", false, function () {\n  return [useParams];\n});\n_c = QuestionAnswers;\nexport default QuestionAnswers;\nvar _c;\n$RefreshReg$(_c, \"QuestionAnswers\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","QuestionAnswers","_s","_question$replies","id","question","setQuestion","console","log","fetchQuestion","response","fetch","data","json","threads","error","children","fileName","_jsxFileName","lineNumber","columnNumber","title","content","replies","length","map","reply","text","userId","timestamp","_c","$RefreshReg$"],"sources":["C:/Users/man_t/OneDrive/dokumentai/GitHub/Final_Work_Full_Stack_App_v3-/client/src/components/QuestionAnswers.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst QuestionAnswers = () => {\n  const { id } = useParams();\n  const [question, setQuestion] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Question ID:\", id); // Patikrinkite, ar gaunate teisingą ID\n    const fetchQuestion = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/thread/${id}`);\n        const data = await response.json();\n        console.log(\"Question data received from the server:\", data); // Check the data received\n        setQuestion(data.threads);\n      } catch (error) {\n        console.error(\"Error fetching question:\", error);\n      }\n    };\n\n    fetchQuestion();\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Question Answers</h2>\n      {question ? (\n        <div>\n          <h3>{question.title}</h3>\n          <p>Question Content: {question.content}</p>\n          <p>Number of Replies: {question.replies?.length || 0}</p>\n          <h4>Replies:</h4>\n          {question.replies.map((reply) => (\n            <div key={reply.id}>\n              <p>Reply Text: {reply.text}</p>\n              <p>User ID: {reply.userId}</p>\n              <p>Timestamp: {reply.timestamp}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>Loading question answers...</p>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionAnswers;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}