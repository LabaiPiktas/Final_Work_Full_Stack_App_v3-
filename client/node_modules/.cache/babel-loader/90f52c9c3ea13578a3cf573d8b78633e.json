{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.js';\n\nfunction useHash() {\n  const [hash, setHashValue] = useState(\"\");\n\n  const setHash = value => {\n    const valueWithHash = value.startsWith(\"#\") ? value : `#${value}`;\n    window.location.hash = valueWithHash;\n    setHashValue(valueWithHash);\n  };\n\n  useWindowEvent(\"hashchange\", () => {\n    const newHash = window.location.hash;\n\n    if (hash !== newHash) {\n      setHashValue(hash);\n    }\n  });\n  useEffect(() => {\n    setHashValue(window.location.hash);\n  }, []);\n  return [hash, setHash];\n}\n\nexport { useHash };","map":{"version":3,"mappings":";;;AAEO,SAASA,OAAT,GAAmB;EACxB,MAAM,CAACC,IAAD,EAAOC,YAAP,IAAuBC,QAAQ,CAAC,EAAD,CAArC;;EACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,UAAN,CAAiB,GAAjB,IAAwBF,KAAxB,GAAiC,IAAGA,KAAM,EAAhE;IACAG,MAAM,CAACC,QAAP,CAAgBR,IAAhB,GAAuBK,aAAvB;IACAJ,YAAY,CAACI,aAAD,CAAZ;EACD,CAJD;;EAKAI,cAAc,CAAC,YAAD,EAAe,MAAM;IACjC,MAAMC,OAAO,GAAGH,MAAM,CAACC,QAAP,CAAgBR,IAAhC;;IACA,IAAIA,IAAI,KAAKU,OAAb,EAAsB;MACpBT,YAAY,CAACD,IAAD,CAAZ;IACD;EACF,CALa,CAAd;EAMAW,SAAS,CAAC,MAAM;IACdV,YAAY,CAACM,MAAM,CAACC,QAAP,CAAgBR,IAAjB,CAAZ;EACD,CAFQ,EAEN,EAFM,CAAT;EAGA,OAAO,CAACA,IAAD,EAAOG,OAAP,CAAP;AACF","names":["useHash","hash","setHashValue","useState","setHash","value","valueWithHash","startsWith","window","location","useWindowEvent","newHash","useEffect"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-hash\\use-hash.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport function useHash() {\n  const [hash, setHashValue] = useState<string>('');\n\n  const setHash = (value: string) => {\n    const valueWithHash = value.startsWith('#') ? value : `#${value}`;\n    window.location.hash = valueWithHash;\n    setHashValue(valueWithHash);\n  };\n\n  useWindowEvent('hashchange', () => {\n    const newHash = window.location.hash;\n    if (hash !== newHash) {\n      setHashValue(hash);\n    }\n  });\n\n  useEffect(() => {\n    setHashValue(window.location.hash);\n  }, []);\n\n  return [hash, setHash] as const;\n}\n"]},"metadata":{},"sourceType":"module"}