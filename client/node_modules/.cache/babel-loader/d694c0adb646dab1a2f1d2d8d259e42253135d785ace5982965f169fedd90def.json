{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\n/*import { FaReply } from \"react-icons/fa\";*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const addReply = () => {\n    addComment(id);\n    fetch(`http://localhost:4000/api/add/comment/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        comment: reply\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      navigate(\"/\"); // Navigate to the main page after successful reply submission\n    }).catch(err => console.error(err));\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      fetch(`http://localhost:4000/api/thread/${id}`).then(res => res.json()).then(data => {\n        if (data.thread) {\n          setThread(data.thread);\n          setReplyList(data.thread.replies);\n          setTitle(data.thread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      }).catch(err => console.error(err));\n    };\n    fetchThread();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), thread && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"modal__content\",\n        onSubmit: handleSubmitReply,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"reply\",\n          children: \"Reply to the thread\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 5,\n          value: reply,\n          onChange: e => setReply(e.target.value),\n          type: \"text\",\n          name: \"reply\",\n          className: \"modalInput\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalBtn\",\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__container\",\n        children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react__container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                opacity: \"0.5\"\n              },\n              children: [\"by \", reply.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, reply._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"replyButton\",\n      children: \"Back to Main Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","addComment","fetch","method","body","JSON","stringify","comment","headers","then","res","json","data","alert","message","catch","err","console","error","handleSubmitReply","e","preventDefault","fetchThread","replies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","value","onChange","target","type","name","map","text","style","opacity","_id","to","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\n/*import { FaReply } from \"react-icons/fa\";*/\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const addReply = () => {\n    addComment(id);\n    fetch(`http://localhost:4000/api/add/comment/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({ comment: reply }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        navigate(\"/\"); // Navigate to the main page after successful reply submission\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      fetch(`http://localhost:4000/api/thread/${id}`)\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.thread) {\n            setThread(data.thread);\n            setReplyList(data.thread.replies);\n            setTitle(data.thread.title);\n          } else {\n            setTitle(\"Thread not found\");\n          }\n        })\n        .catch((err) => console.error(err));\n    };\n\n    fetchThread();\n  }, [id]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {thread && (\n        <>\n          <form className=\"modal__content\" onSubmit={handleSubmitReply}>\n            <label htmlFor=\"reply\">Reply to the thread</label>\n            <textarea\n              rows={5}\n              value={reply}\n              onChange={(e) => setReply(e.target.value)}\n              type=\"text\"\n              name=\"reply\"\n              className=\"modalInput\"\n            />\n\n            <button className=\"modalBtn\">SEND</button>\n          </form>\n\n          <div className=\"thread__container\">\n            {replyList.map((reply) => (\n              <div className=\"thread__item\" key={reply._id}>\n                <p>{reply.text}</p>\n                <div className=\"react__container\">\n                  <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n\n      <Link to=\"/\" className=\"replyButton\">\n        Back to Main Page\n      </Link>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AAC/D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEiB;EAAG,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAE1B,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;IACrBC,UAAU,CAACF,EAAE,CAAC;IACdG,KAAK,CAAE,yCAAwCH,EAAG,EAAC,EAAE;MACnDI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEb;MAAM,CAAC,CAAC;MACxCc,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,KAAK,CAACD,IAAI,CAACE,OAAO,CAAC;MACnBhB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDiB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBrB,QAAQ,CAAC,CAAC;IACVL,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,MAAM2C,WAAW,GAAGA,CAAA,KAAM;MACxBpB,KAAK,CAAE,oCAAmCH,EAAG,EAAC,CAAC,CAC5CU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;QACd,IAAIA,IAAI,CAACtB,MAAM,EAAE;UACfC,SAAS,CAACqB,IAAI,CAACtB,MAAM,CAAC;UACtBG,YAAY,CAACmB,IAAI,CAACtB,MAAM,CAACiC,OAAO,CAAC;UACjC1B,QAAQ,CAACe,IAAI,CAACtB,MAAM,CAACM,KAAK,CAAC;QAC7B,CAAC,MAAM;UACLC,QAAQ,CAAC,kBAAkB,CAAC;QAC9B;MACF,CAAC,CAAC,CACDkB,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;IACvC,CAAC;IAEDM,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACvB,EAAE,CAAC,CAAC;EAER,oBACEd,OAAA;IAAMuC,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACvBxC,OAAA;MAAIuC,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAE7B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAExCvC,MAAM,iBACLL,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACExC,OAAA;QAAMuC,SAAS,EAAC,gBAAgB;QAACM,QAAQ,EAAEX,iBAAkB;QAAAM,QAAA,gBAC3DxC,OAAA;UAAO8C,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClD5C,OAAA;UACE+C,IAAI,EAAE,CAAE;UACRC,KAAK,EAAEvC,KAAM;UACbwC,QAAQ,EAAGd,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE;UAC1CG,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,OAAO;UACZb,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eAEF5C,OAAA;UAAQuC,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAEP5C,OAAA;QAAKuC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC/BjC,SAAS,CAAC8C,GAAG,CAAE5C,KAAK,iBACnBT,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BxC,OAAA;YAAAwC,QAAA,EAAI/B,KAAK,CAAC6C;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB5C,OAAA;YAAKuC,SAAS,EAAC,kBAAkB;YAAAC,QAAA,eAC/BxC,OAAA;cAAGuD,KAAK,EAAE;gBAAEC,OAAO,EAAE;cAAM,CAAE;cAAAhB,QAAA,GAAC,KAAG,EAAC/B,KAAK,CAAC2C,IAAI;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA,GAJ2BnC,KAAK,CAACgD,GAAG;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKvC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA,eACN,CACH,eAED5C,OAAA,CAACF,IAAI;MAAC4D,EAAE,EAAC,GAAG;MAACnB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAErC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEX,CAAC;AAACxC,EAAA,CAxFID,OAAO;EAAA,QAKMN,WAAW,EACbD,SAAS;AAAA;AAAA+D,EAAA,GANpBxD,OAAO;AA0Fb,eAAeA,OAAO;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}