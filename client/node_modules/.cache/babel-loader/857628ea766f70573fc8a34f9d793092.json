{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-novu-node\\\\client\\\\src\\\\components\\\\Replies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Replies = () => {\n  _s();\n\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n\n  const addReply = () => {\n    fetch(\"http://localhost:4000/api/create/reply\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        id,\n        userId: localStorage.getItem(\"_id\"),\n        reply\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      navigate(\"/dashboard\");\n    }).catch(err => console.error(err));\n  };\n\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n\n  useEffect(() => {\n    const fetchReplies = () => {\n      fetch(\"http://localhost:4000/api/thread/replies\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        setReplyList(data.replies);\n        setTitle(data.title);\n      }).catch(err => console.error(err));\n    };\n\n    fetchReplies();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Replies, \"Japo58YJkeqPvLNHttw1ro5ENhQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = Replies;\nexport default Replies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Replies","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","fetch","method","body","JSON","stringify","userId","localStorage","getItem","headers","then","res","json","data","alert","message","catch","err","console","error","handleSubmitReply","e","preventDefault","fetchReplies","replies","target","value","map","text","opacity","name"],"sources":["D:/forum-system-with-react-novu-node/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n\tconst [replyList, setReplyList] = useState([]);\n\tconst [reply, setReply] = useState(\"\");\n\tconst [title, setTitle] = useState(\"\");\n\tconst navigate = useNavigate();\n\tconst { id } = useParams();\n\n\tconst addReply = () => {\n\t\tfetch(\"http://localhost:4000/api/create/reply\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tid,\n\t\t\t\tuserId: localStorage.getItem(\"_id\"),\n\t\t\t\treply,\n\t\t\t}),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => {\n\t\t\t\talert(data.message);\n\t\t\t\tnavigate(\"/dashboard\");\n\t\t\t})\n\t\t\t.catch((err) => console.error(err));\n\t};\n\tconst handleSubmitReply = (e) => {\n\t\te.preventDefault();\n\t\taddReply();\n\t\tsetReply(\"\");\n\t};\n\n\tuseEffect(() => {\n\t\tconst fetchReplies = () => {\n\t\t\tfetch(\"http://localhost:4000/api/thread/replies\", {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tid,\n\t\t\t\t}),\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t})\n\t\t\t\t.then((res) => res.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetReplyList(data.replies);\n\t\t\t\t\tsetTitle(data.title);\n\t\t\t\t})\n\t\t\t\t.catch((err) => console.error(err));\n\t\t};\n\t\tfetchReplies();\n\t}, [id]);\n\n\treturn (\n\t\t<main className='replies'>\n\t\t\t<h1 className='repliesTitle'>{title}</h1>\n\n\t\t\t<form className='modal__content' onSubmit={handleSubmitReply}>\n\t\t\t\t<label htmlFor='reply'>Reply to the thread</label>\n\t\t\t\t<textarea\n\t\t\t\t\trows={5}\n\t\t\t\t\tvalue={reply}\n\t\t\t\t\tonChange={(e) => setReply(e.target.value)}\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='reply'\n\t\t\t\t\tclassName='modalInput'\n\t\t\t\t/>\n\n\t\t\t\t<button className='modalBtn'>SEND</button>\n\t\t\t</form>\n\n\t\t\t<div className='thread__container'>\n\t\t\t\t{replyList.map((reply) => (\n\t\t\t\t\t<div className='thread__item'>\n\t\t\t\t\t\t<p>{reply.text}</p>\n\t\t\t\t\t\t<div className='react__container'>\n\t\t\t\t\t\t\t<p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</main>\n\t);\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}