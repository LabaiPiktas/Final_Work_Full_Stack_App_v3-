{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const fetchThread = () => {\n    fetch(`http://localhost:4000/api/all/threads/${id}`).then(res => res.json()).then(data => {\n      const selectedThread = data.thread;\n      if (selectedThread) {\n        const updatedReplyList = selectedThread.replies.map(reply => ({\n          ...reply,\n          likes: reply.likes || [],\n          dislikes: reply.dislikes || [],\n          isEditing: false // Add isEditing flag to track editing state\n        }));\n\n        setThread(selectedThread);\n        setReplyList(updatedReplyList);\n        setTitle(selectedThread.title);\n      } else {\n        setTitle(\"Thread not found\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const addReply = () => {\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        replyText: reply,\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      fetchThread();\n      setReply(\"\");\n    }).catch(err => console.error(err));\n  };\n  const editReply = (replyId, newText) => {\n    fetch(`http://localhost:4000/api/edit-reply/${replyId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        newText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply edited successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            return {\n              ...reply,\n              text: newText,\n              isEditing: false // Exit editing mode\n            };\n          }\n\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n  };\n  const handleEditReply = replyId => {\n    setEditingReplyId(replyId);\n  };\n  const handleEditInputChange = e => {\n    const newText = e.target.value;\n    setReplyList(prevReplyList => prevReplyList.map(reply => {\n      if (reply._id === editingReplyId) {\n        return {\n          ...reply,\n          text: newText\n        };\n      }\n      return reply;\n    }));\n  };\n  const saveEditedReply = () => {\n    const editedReply = replyList.find(reply => reply._id === editingReplyId);\n    if (editedReply) {\n      editReply(editingReplyId, editedReply.text);\n    }\n  };\n  const likeReply = replyId => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply liked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            return {\n              ...reply,\n              likes: [...reply.likes, localStorage.getItem(\"_id\")]\n            };\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  const dislikeReply = replyId => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply disliked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            return {\n              ...reply,\n              dislikes: [...reply.dislikes, localStorage.getItem(\"_id\")]\n            };\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchThread();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!reply.isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"editBtn\",\n              onClick: () => handleEditReply(reply._id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this), reply.isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"saveBtn\",\n              onClick: saveEditedReply,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: reply.text,\n              onChange: handleEditInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this) : reply.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"likeBtn\",\n            onClick: () => likeReply(reply._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dislikeBtn\",\n            onClick: () => dislikeReply(reply._id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"SZ6pszItBZOndsYchfrgZ+asdXY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","editingReplyId","setEditingReplyId","navigate","id","fetchThread","fetch","then","res","json","data","selectedThread","updatedReplyList","replies","map","likes","dislikes","isEditing","catch","err","console","error","addReply","method","body","JSON","stringify","replyText","userId","localStorage","getItem","headers","alert","message","editReply","replyId","newText","prevReplyList","_id","text","handleSubmitReply","e","preventDefault","handleEditReply","handleEditInputChange","target","value","saveEditedReply","editedReply","find","likeReply","dislikeReply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","onChange","type","name","onClick","style","opacity","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const fetchThread = () => {\n    fetch(`http://localhost:4000/api/all/threads/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        const selectedThread = data.thread;\n        if (selectedThread) {\n          const updatedReplyList = selectedThread.replies.map((reply) => ({\n            ...reply,\n            likes: reply.likes || [],\n            dislikes: reply.dislikes || [],\n            isEditing: false, // Add isEditing flag to track editing state\n          }));\n\n          setThread(selectedThread);\n          setReplyList(updatedReplyList);\n          setTitle(selectedThread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const addReply = () => {\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        replyText: reply,\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        fetchThread();\n        setReply(\"\");\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const editReply = (replyId, newText) => {\n    fetch(`http://localhost:4000/api/edit-reply/${replyId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ newText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply edited successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                return {\n                  ...reply,\n                  text: newText,\n                  isEditing: false, // Exit editing mode\n                };\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n  };\n\n  const handleEditReply = (replyId) => {\n    setEditingReplyId(replyId);\n  };\n\n  const handleEditInputChange = (e) => {\n    const newText = e.target.value;\n    setReplyList((prevReplyList) =>\n      prevReplyList.map((reply) => {\n        if (reply._id === editingReplyId) {\n          return {\n            ...reply,\n            text: newText,\n          };\n        }\n        return reply;\n      })\n    );\n  };\n\n  const saveEditedReply = () => {\n    const editedReply = replyList.find((reply) => reply._id === editingReplyId);\n    if (editedReply) {\n      editReply(editingReplyId, editedReply.text);\n    }\n  };\n\n  const likeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply liked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                return {\n                  ...reply,\n                  likes: [...reply.likes, localStorage.getItem(\"_id\")],\n                };\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const dislikeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply disliked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                return {\n                  ...reply,\n                  dislikes: [...reply.dislikes, localStorage.getItem(\"_id\")],\n                };\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    fetchThread();\n  }, []);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {localStorage.getItem(\"_id\") && (\n        <form className=\"modal__content\" onSubmit={handleSubmitReply}>\n          <label htmlFor=\"reply\">Reply to the thread</label>\n          <textarea\n            rows={5}\n            value={reply}\n            onChange={(e) => setReply(e.target.value)}\n            type=\"text\"\n            name=\"reply\"\n            className=\"modalInput\"\n          />\n\n          <button className=\"modalBtn\">SEND</button>\n        </form>\n      )}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <div className=\"react__container\">\n              {localStorage.getItem(\"_id\") && (\n                <>\n                  {!reply.isEditing && (\n                    <button\n                      className=\"editBtn\"\n                      onClick={() => handleEditReply(reply._id)}\n                    >\n                      Edit\n                    </button>\n                  )}\n                  {reply.isEditing && (\n                    <button className=\"saveBtn\" onClick={saveEditedReply}>\n                      Save\n                    </button>\n                  )}\n                </>\n              )}\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n              <p>\n                {reply.isEditing ? (\n                  <input\n                    type=\"text\"\n                    value={reply.text}\n                    onChange={handleEditInputChange}\n                  />\n                ) : (\n                  reply.text\n                )}\n              </p>\n              <button className=\"likeBtn\" onClick={() => likeReply(reply._id)}>\n                Like\n              </button>\n              <button\n                className=\"dislikeBtn\"\n                onClick={() => dislikeReply(reply._id)}\n              >\n                Dislike\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}