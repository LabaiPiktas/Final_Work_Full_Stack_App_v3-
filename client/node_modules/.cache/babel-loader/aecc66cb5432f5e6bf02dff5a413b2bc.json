{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"FileButton\", defaultProps, props),\n        {\n    onChange,\n    children,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef,\n    disabled,\n    capture,\n    inputProps\n  } = _a,\n        others = __objRest(_a, [\"onChange\", \"children\", \"multiple\", \"accept\", \"name\", \"form\", \"resetRef\", \"disabled\", \"capture\", \"inputProps\"]);\n\n  const inputRef = useRef();\n\n  const onClick = () => {\n    !disabled && inputRef.current.click();\n  };\n\n  const handleChange = event => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n\n  const reset = () => {\n    inputRef.current.value = \"\";\n  };\n\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(__spreadValues({\n    onClick\n  }, others)), /* @__PURE__ */React.createElement(\"input\", __spreadValues({\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept,\n    multiple,\n    onChange: handleChange,\n    ref: useMergedRef(ref, inputRef),\n    name,\n    form,\n    capture\n  }, inputProps)));\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__objRest","source","exclude","target","indexOf","defaultProps","multiple","FileButton","forwardRef","props","ref","_a","useComponentDefaultProps","onChange","children","accept","name","form","resetRef","disabled","capture","inputProps","others","inputRef","useRef","onClick","current","click","handleChange","event","Array","from","currentTarget","files","reset","assignRef","React","createElement","Fragment","style","display","type","useMergedRef","displayName"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\core\\src\\FileButton\\FileButton.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { useRef, forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange(payload: Multiple extends true ? File[] : File | null): void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children(props: { onClick(): void }): React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, \"image/png,image/jpeg\" */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Spreads props to input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps,\n      ...others\n    } = useComponentDefaultProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>();\n\n    const onClick = () => {\n      !disabled && inputRef.current.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget.files) as any);\n      } else {\n        onChange(event.currentTarget.files[0] || null);\n      }\n    };\n\n    const reset = () => {\n      inputRef.current.value = '';\n    };\n\n    assignRef(resetRef, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n          capture={capture}\n          {...inputProps}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"]},"metadata":{},"sourceType":"module"}