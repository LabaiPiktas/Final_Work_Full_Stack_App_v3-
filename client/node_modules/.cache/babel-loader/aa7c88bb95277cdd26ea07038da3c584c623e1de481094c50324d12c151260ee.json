{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const addReply = () => {\n    // ... code to add the reply ...\n\n    // Generate a unique ID for the reply\n    const replyId = Math.floor(Math.random() * 1000000);\n\n    // Create a new reply object with the unique ID, user, and timestamp\n    const newReply = {\n      id: replyId,\n      text: reply,\n      userId: localStorage.getItem(\"_id\"),\n      name: \"User\",\n      timestamp: new Date().toLocaleString()\n    };\n\n    // Update the reply list with the new reply\n    setReplyList(prevReplyList => [...prevReplyList, newReply]);\n    setReply(\"\");\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n  };\n  const editReply = (replyId, newText) => {\n    // Find the reply to edit based on the ID\n    const updatedReplyList = replyList.map(reply => {\n      if (reply.id === replyId) {\n        return {\n          ...reply,\n          text: newText\n        };\n      }\n      return reply;\n    });\n    setReplyList(updatedReplyList);\n  };\n  const deleteReply = replyId => {\n    // Filter out the reply with the specified ID\n    const updatedReplyList = replyList.filter(reply => reply.id !== replyId);\n    setReplyList(updatedReplyList);\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      // Fetch the thread and reply data from the server\n      // ...\n\n      // Example response data structure\n      const responseData = {\n        replies: [{\n          _id: ObjectId(\"\"),\n          id: \"\",\n          text: \"Reply 1\",\n          userId: \"user1\",\n          name: \"User 1\",\n          timestamp: \"2023-07-09 10:00:00\",\n          replies: {\n            text: \"\",\n            userId: \"\"\n          },\n          likes: {\n            0: \"\",\n            1: \"\"\n          }\n        }, {\n          id: 2,\n          text: \"Reply 2\",\n          userId: \"user2\",\n          name: \"User 2\",\n          timestamp: \"2023-07-09 11:00:00\"\n        }\n        // ...\n        ],\n\n        title: \"Thread Title\"\n      };\n\n      // Update the reply list and title with the fetched data\n      setReplyList(responseData.replies);\n      setTitle(responseData.title);\n    };\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"editBtn\",\n              onClick: () => editReply(reply.id, \"New text\"),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteBtn\",\n              onClick: () => deleteReply(reply.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","replyId","Math","floor","random","newReply","text","userId","localStorage","getItem","name","timestamp","Date","toLocaleString","prevReplyList","handleSubmitReply","e","preventDefault","editReply","newText","updatedReplyList","map","deleteReply","filter","fetchThread","responseData","replies","_id","ObjectId","likes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","value","onChange","target","type","style","opacity","onClick","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const addReply = () => {\n    // ... code to add the reply ...\n\n    // Generate a unique ID for the reply\n    const replyId = Math.floor(Math.random() * 1000000);\n\n    // Create a new reply object with the unique ID, user, and timestamp\n    const newReply = {\n      id: replyId,\n      text: reply,\n      userId: localStorage.getItem(\"_id\"),\n      name: \"User\",\n      timestamp: new Date().toLocaleString(),\n    };\n\n    // Update the reply list with the new reply\n    setReplyList((prevReplyList) => [...prevReplyList, newReply]);\n    setReply(\"\");\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n  };\n\n  const editReply = (replyId, newText) => {\n    // Find the reply to edit based on the ID\n    const updatedReplyList = replyList.map((reply) => {\n      if (reply.id === replyId) {\n        return {\n          ...reply,\n          text: newText,\n        };\n      }\n      return reply;\n    });\n\n    setReplyList(updatedReplyList);\n  };\n\n  const deleteReply = (replyId) => {\n    // Filter out the reply with the specified ID\n    const updatedReplyList = replyList.filter((reply) => reply.id !== replyId);\n\n    setReplyList(updatedReplyList);\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      // Fetch the thread and reply data from the server\n      // ...\n\n      // Example response data structure\n      const responseData = {\n        replies: [\n          {\n            _id: ObjectId(\"\"),\n            id: \"\",\n            text: \"Reply 1\",\n            userId: \"user1\",\n            name: \"User 1\",\n            timestamp: \"2023-07-09 10:00:00\",\n            replies: { text: \"\", userId: \"\" },\n            likes: { 0: \"\", 1: \"\" },\n          },\n          {\n            id: 2,\n            text: \"Reply 2\",\n            userId: \"user2\",\n            name: \"User 2\",\n            timestamp: \"2023-07-09 11:00:00\",\n          },\n          // ...\n        ],\n        title: \"Thread Title\",\n      };\n\n      // Update the reply list and title with the fetched data\n      setReplyList(responseData.replies);\n      setTitle(responseData.title);\n    };\n\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {localStorage.getItem(\"_id\") && (\n        <form className=\"modal__content\" onSubmit={handleSubmitReply}>\n          <label htmlFor=\"reply\">Reply to the thread</label>\n          <textarea\n            rows={5}\n            value={reply}\n            onChange={(e) => setReply(e.target.value)}\n            type=\"text\"\n            name=\"reply\"\n            className=\"modalInput\"\n          />\n\n          <button className=\"modalBtn\">SEND</button>\n        </form>\n      )}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply.id}>\n            <p>{reply.text}</p>\n            <div className=\"react__container\">\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n              <p>{reply.timestamp}</p>\n              {localStorage.getItem(\"_id\") && (\n                <>\n                  <button\n                    className=\"editBtn\"\n                    onClick={() => editReply(reply.id, \"New text\")}\n                  >\n                    Edit\n                  </button>\n                  <button\n                    className=\"deleteBtn\"\n                    onClick={() => deleteReply(reply.id)}\n                  >\n                    Delete\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}