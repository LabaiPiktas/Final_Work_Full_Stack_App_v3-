{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Instrument\\u0173 skyrius\\\\Desktop\\\\Final_Work_Full_Stack_App\\\\client\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [thread, setThread] = useState({\n    text: \"\"\n  });\n  const [threadList, setThreadList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => setThreadList(data.threads)).catch(err => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread.text,\n        userId: localStorage.getItem(\"_id\"),\n        replies: []\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => setThreadList(data.threads)).catch(err => console.error(err));\n    }).catch(err => console.error(err));\n  };\n  const editThread = threadId => {\n    const updatedThreadText = prompt(\"Enter the updated thread text:\");\n    if (updatedThreadText) {\n      fetch(`http://localhost:4000/api/edit/thread/${threadId}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          text: updatedThreadText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(res => res.json()).then(data => {\n        alert(data.message);\n        fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => setThreadList(data.threads)).catch(err => console.error(err));\n      }).catch(err => console.error(err));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    createThread();\n    setThread({\n      text: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"homeTitle\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"homeForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"home__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"thread\",\n            children: \"Title / Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"thread\",\n            required: true,\n            value: thread.text,\n            onChange: e => setThread({\n              ...thread,\n              text: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"homeBtn\",\n          children: \"CREATE THREAD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__container\",\n        children: threadList.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: thread.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react__container\",\n            children: [/*#__PURE__*/_jsxDEV(Likes, {\n              numberOfLikes: thread.likes.length,\n              threadId: thread.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comments, {\n              numberOfComments: thread.replies.length,\n              threadId: thread.id,\n              title: thread.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => editThread(thread.id),\n                children: \"Edit Thread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => deleteThread(thread.id),\n                children: \"Delete Thread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)]\n        }, thread.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"E3XvaKo7kRalnPh2DYYoQFEpF1E=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Likes","Comments","useNavigate","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","thread","setThread","text","threadList","setThreadList","navigate","checkUser","localStorage","getItem","fetch","then","res","json","data","threads","catch","err","console","error","createThread","method","body","JSON","stringify","userId","replies","headers","alert","message","editThread","threadId","updatedThreadText","prompt","handleSubmit","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","name","required","value","onChange","target","map","title","numberOfLikes","likes","length","id","numberOfComments","onClick","deleteThread","_c","$RefreshReg$"],"sources":["C:/Users/InstrumentÅ³ skyrius/Desktop/Final_Work_Full_Stack_App/client/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Likes from \"../utils/Likes\";\nimport Comments from \"../utils/Comments\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"./Nav\";\n\nconst Home = () => {\n  const [thread, setThread] = useState({ text: \"\" });\n  const [threadList, setThreadList] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const checkUser = () => {\n      if (!localStorage.getItem(\"_id\")) {\n        navigate(\"/\");\n      } else {\n        fetch(\"http://localhost:4000/api/all/threads\")\n          .then((res) => res.json())\n          .then((data) => setThreadList(data.threads))\n          .catch((err) => console.error(err));\n      }\n    };\n    checkUser();\n  }, [navigate]);\n\n  const createThread = () => {\n    fetch(\"http://localhost:4000/api/create/thread\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        thread: thread.text,\n        userId: localStorage.getItem(\"_id\"),\n        replies: [],\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        fetch(\"http://localhost:4000/api/all/threads\")\n          .then((res) => res.json())\n          .then((data) => setThreadList(data.threads))\n          .catch((err) => console.error(err));\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const editThread = (threadId) => {\n    const updatedThreadText = prompt(\"Enter the updated thread text:\");\n    if (updatedThreadText) {\n      fetch(`http://localhost:4000/api/edit/thread/${threadId}`, {\n        method: \"PUT\",\n        body: JSON.stringify({\n          text: updatedThreadText,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          alert(data.message);\n          fetch(\"http://localhost:4000/api/all/threads\")\n            .then((res) => res.json())\n            .then((data) => setThreadList(data.threads))\n            .catch((err) => console.error(err));\n        })\n        .catch((err) => console.error(err));\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createThread();\n    setThread({ text: \"\" });\n  };\n\n  return (\n    <>\n      <Nav />\n      <main className=\"home\">\n        <h2 className=\"homeTitle\">Create a Thread</h2>\n        <form className=\"homeForm\" onSubmit={handleSubmit}>\n          <div className=\"home__container\">\n            <label htmlFor=\"thread\">Title / Description</label>\n            <input\n              type=\"text\"\n              name=\"thread\"\n              required\n              value={thread.text}\n              onChange={(e) => setThread({ ...thread, text: e.target.value })}\n            />\n          </div>\n          <button className=\"homeBtn\">CREATE THREAD</button>\n        </form>\n\n        <div className=\"thread__container\">\n          {threadList.map((thread) => (\n            <div className=\"thread__item\" key={thread.id}>\n              <p>{thread.title}</p>\n              <div className=\"react__container\">\n                <Likes\n                  numberOfLikes={thread.likes.length}\n                  threadId={thread.id}\n                />\n                <Comments\n                  numberOfComments={thread.replies.length}\n                  threadId={thread.id}\n                  title={thread.title}\n                />\n                {localStorage.getItem(\"_id\") && (\n                  <>\n                    <button\n                      className=\"modalBtn\"\n                      onClick={() => editThread(thread.id)}\n                    >\n                      Edit Thread\n                    </button>\n                    <button\n                      className=\"modalBtn\"\n                      onClick={() => deleteThread(thread.id)}\n                    >\n                      Delete Thread\n                    </button>\n                  </>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}