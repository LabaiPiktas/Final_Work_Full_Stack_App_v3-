{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const fetchThread = () => {\n    fetch(`http://localhost:4000/api/all/threads/${id}`).then(res => res.json()).then(data => {\n      const selectedThread = data.thread;\n      if (selectedThread) {\n        const updatedReplyList = selectedThread.replies.map(reply => ({\n          ...reply,\n          isEditing: false // Add isEditing flag to track editing state\n        }));\n\n        setThread(selectedThread);\n        setReplyList(updatedReplyList);\n        setTitle(selectedThread.title);\n      } else {\n        setTitle(\"Thread not found\");\n      }\n    }).catch(err => console.error(err));\n  };\n  const addReply = () => {\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        replyText: reply,\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      alert(data.message);\n      fetchThread();\n      setReply(\"\");\n    }).catch(err => console.error(err));\n  };\n  const editReply = (replyId, newText) => {\n    fetch(`http://localhost:4000/api/edit-reply/${replyId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        newText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply edited successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            return {\n              ...reply,\n              text: newText,\n              isEditing: false // Exit editing mode\n            };\n          }\n\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  const handleEditReply = replyId => {\n    setEditingReplyId(replyId);\n  };\n  const handleEditInputChange = e => {\n    const newText = e.target.value;\n    setReplyList(prevReplyList => prevReplyList.map(reply => {\n      if (reply._id === editingReplyId) {\n        return {\n          ...reply,\n          text: newText\n        };\n      }\n      return reply;\n    }));\n  };\n  const saveEditedReply = () => {\n    const editedReply = replyList.find(reply => reply._id === editingReplyId);\n    if (editedReply) {\n      editReply(editingReplyId, editedReply.text);\n    }\n  };\n  useEffect(() => {\n    fetchThread();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: addReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [localStorage.getItem(\"_id\") && !reply.isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"editBtn\",\n            onClick: () => handleEditReply(reply._id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), reply.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: reply.text,\n            onChange: handleEditInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), localStorage.getItem(\"_id\") && reply.isEditing && reply._id === editingReplyId && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"saveBtn\",\n            onClick: saveEditedReply,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"SZ6pszItBZOndsYchfrgZ+asdXY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","editingReplyId","setEditingReplyId","navigate","id","fetchThread","fetch","then","res","json","data","selectedThread","updatedReplyList","replies","map","isEditing","catch","err","console","error","addReply","method","body","JSON","stringify","replyText","userId","localStorage","getItem","headers","alert","message","editReply","replyId","newText","prevReplyList","_id","text","handleEditReply","handleEditInputChange","e","target","value","saveEditedReply","editedReply","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","onChange","type","name","onClick","style","opacity","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [editingReplyId, setEditingReplyId] = useState(null);\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const fetchThread = () => {\n    fetch(`http://localhost:4000/api/all/threads/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        const selectedThread = data.thread;\n        if (selectedThread) {\n          const updatedReplyList = selectedThread.replies.map((reply) => ({\n            ...reply,\n            isEditing: false, // Add isEditing flag to track editing state\n          }));\n\n          setThread(selectedThread);\n          setReplyList(updatedReplyList);\n          setTitle(selectedThread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const addReply = () => {\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        replyText: reply,\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        alert(data.message);\n        fetchThread();\n        setReply(\"\");\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const editReply = (replyId, newText) => {\n    fetch(`http://localhost:4000/api/edit-reply/${replyId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ newText }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply edited successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                return {\n                  ...reply,\n                  text: newText,\n                  isEditing: false, // Exit editing mode\n                };\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleEditReply = (replyId) => {\n    setEditingReplyId(replyId);\n  };\n\n  const handleEditInputChange = (e) => {\n    const newText = e.target.value;\n    setReplyList((prevReplyList) =>\n      prevReplyList.map((reply) => {\n        if (reply._id === editingReplyId) {\n          return {\n            ...reply,\n            text: newText,\n          };\n        }\n        return reply;\n      })\n    );\n  };\n\n  const saveEditedReply = () => {\n    const editedReply = replyList.find((reply) => reply._id === editingReplyId);\n    if (editedReply) {\n      editReply(editingReplyId, editedReply.text);\n    }\n  };\n\n  useEffect(() => {\n    fetchThread();\n  }, []);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {localStorage.getItem(\"_id\") && (\n        <form className=\"modal__content\" onSubmit={addReply}>\n          <label htmlFor=\"reply\">Reply to the thread</label>\n          <textarea\n            rows={5}\n            value={reply}\n            onChange={(e) => setReply(e.target.value)}\n            type=\"text\"\n            name=\"reply\"\n            className=\"modalInput\"\n          />\n\n          <button type=\"submit\" className=\"modalBtn\">\n            SEND\n          </button>\n        </form>\n      )}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <div className=\"react__container\">\n              {localStorage.getItem(\"_id\") && !reply.isEditing && (\n                <button\n                  className=\"editBtn\"\n                  onClick={() => handleEditReply(reply._id)}\n                >\n                  Edit\n                </button>\n              )}\n\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n\n              {reply.isEditing ? (\n                <input\n                  type=\"text\"\n                  value={reply.text}\n                  onChange={handleEditInputChange}\n                />\n              ) : (\n                <p>{reply.text}</p>\n              )}\n\n              {localStorage.getItem(\"_id\") &&\n                reply.isEditing &&\n                reply._id === editingReplyId && (\n                  <button className=\"saveBtn\" onClick={saveEditedReply}>\n                    Save\n                  </button>\n                )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}