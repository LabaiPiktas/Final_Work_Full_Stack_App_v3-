{"ast":null,"code":"import { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useFloating, size, offset, shift, limitShift, flip, inline, arrow } from '@floating-ui/react';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\n\nfunction getPopoverMiddlewares(options) {\n  const middlewares = [offset(options.offset)];\n\n  if (options.middlewares.shift) {\n    middlewares.push(shift({\n      limiter: limitShift()\n    }));\n  }\n\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n\n  if (options.middlewares.inline) {\n    middlewares.push(inline());\n  }\n\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  return middlewares;\n}\n\nfunction usePopover(options) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n\n  const onClose = () => {\n    var _a;\n\n    (_a = options.onClose) == null ? void 0 : _a.call(options);\n    setOpened(false);\n  };\n\n  const onToggle = () => {\n    var _a, _b;\n\n    if (_opened) {\n      (_a = options.onClose) == null ? void 0 : _a.call(options);\n      setOpened(false);\n    } else {\n      (_b = options.onOpen) == null ? void 0 : _b.call(options);\n      setOpened(true);\n    }\n  };\n\n  const floating = useFloating({\n    placement: options.position,\n    middleware: [...getPopoverMiddlewares(options), ...(options.width === \"target\" ? [size({\n      apply(_ref) {\n        let {\n          rects\n        } = _ref;\n\n        var _a, _b;\n\n        Object.assign((_b = (_a = floating.refs.floating.current) == null ? void 0 : _a.style) != null ? _b : {}, {\n          width: `${rects.reference.width}px`\n        });\n      }\n\n    })] : [])]\n  });\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating\n  });\n  useDidUpdate(() => {\n    var _a;\n\n    (_a = options.onPositionChange) == null ? void 0 : _a.call(options, floating.placement);\n  }, [floating.placement]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\n\nexport { usePopover };","map":{"version":3,"mappings":"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","names":["getPopoverMiddlewares","options","middlewares","offset","shift","push","limiter","limitShift","flip","inline","arrow","element","arrowRef","padding","arrowOffset","usePopover","_opened","setOpened","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","onClose","_a","call","onToggle","_b","onOpen","floating","useFloating","placement","position","middleware","width","size","apply","rects","Object","assign","refs","current","style","reference","useFloatingAutoUpdate","positionDependencies","useDidUpdate","onPositionChange","controlled"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\core\\src\\Popover\\use-popover.ts"],"sourcesContent":["import { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  useFloating,\n  shift,\n  flip,\n  arrow,\n  offset,\n  size,\n  Middleware,\n  inline,\n  limitShift,\n} from '@floating-ui/react';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\nimport { PopoverWidth, PopoverMiddlewares } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number;\n  position: FloatingPosition;\n  positionDependencies: any[];\n  onPositionChange?(position: FloatingPosition): void;\n  opened: boolean;\n  defaultOpened: boolean;\n  onChange(opened: boolean): void;\n  onClose?(): void;\n  onOpen?(): void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares;\n  arrowRef: React.RefObject<HTMLDivElement>;\n  arrowOffset: number;\n}\n\nfunction getPopoverMiddlewares(options: UsePopoverOptions) {\n  const middlewares: Middleware[] = [offset(options.offset)];\n\n  if (options.middlewares.shift) {\n    middlewares.push(shift({ limiter: limitShift() }));\n  }\n\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n\n  if (options.middlewares.inline) {\n    middlewares.push(inline());\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const onClose = () => {\n    options.onClose?.();\n    setOpened(false);\n  };\n\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n\n  const floating = useFloating({\n    placement: options.position,\n    middleware: [\n      ...getPopoverMiddlewares(options),\n      ...(options.width === 'target'\n        ? [\n            size({\n              apply({ rects }) {\n                Object.assign(floating.refs.floating.current?.style ?? {}, {\n                  width: `${rects.reference.width}px`,\n                });\n              },\n            }),\n          ]\n        : []),\n    ],\n  });\n\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}