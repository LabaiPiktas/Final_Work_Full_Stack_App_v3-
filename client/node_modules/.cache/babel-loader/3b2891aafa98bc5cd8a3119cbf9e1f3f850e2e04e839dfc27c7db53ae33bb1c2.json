{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList(prevReplyList => [...prevReplyList, {\n      text: reply,\n      name: \"You\",\n      likes: [],\n      dislikes: []\n    }]);\n    setReply(\"\");\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n  };\n  const likeReply = replyId => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply liked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            reply.likes.push(localStorage.getItem(\"_id\"));\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  const dislikeReply = replyId => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply disliked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            reply.dislikes.push(localStorage.getItem(\"_id\"));\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n\n      // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n      const updatedReplyList = thread.replies.map(reply => ({\n        ...reply,\n        likes: reply.likes || [],\n        dislikes: reply.dislikes || []\n      }));\n      setThread(thread);\n      setReplyList(updatedReplyList);\n      setTitle(thread.title);\n    };\n    fetchThread();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"likeBtn\",\n            onClick: () => likeReply(reply._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dislikeBtn\",\n            onClick: () => dislikeReply(reply._id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, reply._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","prevReplyList","text","name","likes","dislikes","handleSubmitReply","e","preventDefault","likeReply","replyId","fetch","method","body","JSON","stringify","userId","localStorage","getItem","headers","then","res","json","data","message","map","_id","push","catch","err","console","error","dislikeReply","fetchThread","updatedReplyList","replies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","opacity","onClick","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList((prevReplyList) => [\n      ...prevReplyList,\n      { text: reply, name: \"You\", likes: [], dislikes: [] },\n    ]);\n    setReply(\"\");\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n  };\n\n  const likeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply liked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                reply.likes.push(localStorage.getItem(\"_id\"));\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const dislikeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply disliked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                reply.dislikes.push(localStorage.getItem(\"_id\"));\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n\n      // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n      const updatedReplyList = thread.replies.map((reply) => ({\n        ...reply,\n        likes: reply.likes || [],\n        dislikes: reply.dislikes || [],\n      }));\n\n      setThread(thread);\n      setReplyList(updatedReplyList);\n      setTitle(thread.title);\n    };\n\n    fetchThread();\n  }, [id]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {/* ... kodas atvaizduoti atsakymo formą ... */}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <p>{reply.text}</p>\n            <div className=\"react__container\">\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n              <button className=\"likeBtn\" onClick={() => likeReply(reply._id)}>\n                Like\n              </button>\n              <button\n                className=\"dislikeBtn\"\n                onClick={() => dislikeReply(reply._id)}\n              >\n                Dislike\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}