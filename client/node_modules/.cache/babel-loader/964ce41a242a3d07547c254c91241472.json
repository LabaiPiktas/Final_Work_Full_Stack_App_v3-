{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { RenderList } from './RenderList/RenderList.js';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea.js';\nimport { DefaultItem } from './DefaultItem/DefaultItem.js';\nimport { useSelectionState } from './use-selection-state/use-selection-state.js';\nimport { SimpleGrid } from '../SimpleGrid/SimpleGrid.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction defaultFilter(query, item) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst defaultProps = {\n  itemComponent: DefaultItem,\n  filter: defaultFilter,\n  titles: [null, null],\n  placeholder: [null, null],\n  listHeight: 150,\n  listComponent: SelectScrollArea,\n  showTransferAll: true,\n  limit: Infinity,\n  transferAllMatchingFilter: false\n};\nconst TransferList = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"TransferList\", defaultProps, props),\n        {\n    value,\n    onChange,\n    itemComponent,\n    searchPlaceholder,\n    searchValues,\n    onSearch,\n    filter,\n    nothingFound,\n    placeholder,\n    titles,\n    initialSelection,\n    listHeight,\n    listComponent,\n    showTransferAll,\n    breakpoint,\n    radius,\n    classNames,\n    styles,\n    limit,\n    unstyled,\n    transferIcon,\n    transferAllIcon,\n    transferAllMatchingFilter\n  } = _a,\n        others = __objRest(_a, [\"value\", \"onChange\", \"itemComponent\", \"searchPlaceholder\", \"searchValues\", \"onSearch\", \"filter\", \"nothingFound\", \"placeholder\", \"titles\", \"initialSelection\", \"listHeight\", \"listComponent\", \"showTransferAll\", \"breakpoint\", \"radius\", \"classNames\", \"styles\", \"limit\", \"unstyled\", \"transferIcon\", \"transferAllIcon\", \"transferAllMatchingFilter\"]);\n\n  const [selection, handlers] = useSelectionState(initialSelection);\n  const [search, handleSearch] = useUncontrolled({\n    value: searchValues,\n    defaultValue: [\"\", \"\"],\n    finalValue: [\"\", \"\"],\n    onChange: onSearch\n  });\n\n  const handleMoveAll = listIndex => {\n    const items = Array(2);\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n\n    if (transferAllMatchingFilter) {\n      const query = search[listIndex];\n      const shownItems = value[listIndex].filter(item => filter(query, item)).slice(0, limit);\n      const hiddenItems = value[listIndex].filter(item => !filter(query, item));\n      items[listIndex] = hiddenItems;\n      items[moveToIndex] = [...value[moveToIndex], ...shownItems];\n    } else {\n      items[listIndex] = [];\n      items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n    }\n\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const handleMove = listIndex => {\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    const items = Array(2);\n    const transferData = value[listIndex].reduce((acc, item) => {\n      if (!selection[listIndex].includes(item.value)) {\n        acc.filtered.push(item);\n      } else {\n        acc.current.push(item);\n      }\n\n      return acc;\n    }, {\n      filtered: [],\n      current: []\n    });\n    items[listIndex] = transferData.filtered;\n    items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const breakpoints = breakpoint ? [{\n    maxWidth: breakpoint,\n    cols: 1\n  }] : [];\n  const sharedListProps = {\n    itemComponent,\n    listComponent,\n    transferIcon,\n    transferAllIcon,\n    filter,\n    height: listHeight,\n    showTransferAll,\n    classNames,\n    styles,\n    limit,\n    radius\n  };\n  return /* @__PURE__ */React.createElement(SimpleGrid, __spreadValues({\n    cols: 2,\n    spacing: \"xl\",\n    breakpoints,\n    ref,\n    unstyled\n  }, others), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[0],\n    selection: selection[0],\n    onSelect: val => handlers.select(0, val),\n    onMoveAll: () => handleMoveAll(0),\n    onMove: () => handleMove(0),\n    title: titles[0],\n    placeholder: Array.isArray(placeholder) ? placeholder[0] : placeholder,\n    searchPlaceholder: Array.isArray(searchPlaceholder) ? searchPlaceholder[0] : searchPlaceholder,\n    nothingFound: Array.isArray(nothingFound) ? nothingFound[0] : nothingFound,\n    query: search[0],\n    onSearch: query => handleSearch([query, search[1]]),\n    unstyled,\n    transferAllMatchingFilter\n  })), /* @__PURE__ */React.createElement(RenderList, __spreadProps(__spreadValues({}, sharedListProps), {\n    data: value[1],\n    selection: selection[1],\n    onSelect: val => handlers.select(1, val),\n    onMoveAll: () => handleMoveAll(1),\n    onMove: () => handleMove(1),\n    title: titles[1],\n    placeholder: Array.isArray(placeholder) ? placeholder[1] : placeholder,\n    searchPlaceholder: Array.isArray(searchPlaceholder) ? searchPlaceholder[1] : searchPlaceholder,\n    nothingFound: Array.isArray(nothingFound) ? nothingFound[1] : nothingFound,\n    query: search[1],\n    onSearch: query => handleSearch([search[0], query]),\n    reversed: true,\n    unstyled,\n    transferAllMatchingFilter\n  })));\n});\nTransferList.displayName = \"@mantine/core/TransferList\";\nexport { TransferList, defaultFilter };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFilter","query","item","label","toLowerCase","trim","includes","defaultProps","itemComponent","DefaultItem","filter","titles","placeholder","listHeight","listComponent","SelectScrollArea","showTransferAll","limit","Infinity","transferAllMatchingFilter","TransferList","forwardRef","props","ref","_a","useComponentDefaultProps","onChange","searchPlaceholder","searchValues","onSearch","nothingFound","initialSelection","breakpoint","radius","classNames","styles","unstyled","transferIcon","transferAllIcon","others","selection","handlers","useSelectionState","search","handleSearch","useUncontrolled","defaultValue","finalValue","handleMoveAll","listIndex","items","Array","moveToIndex","shownItems","slice","hiddenItems","deselectAll","handleMove","transferData","reduce","acc","filtered","push","current","breakpoints","maxWidth","cols","sharedListProps","height","React","createElement","SimpleGrid","spacing","RenderList","data","onSelect","val","select","onMoveAll","onMove","title","isArray","reversed","displayName"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\core\\src\\TransferList\\TransferList.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { RenderList, RenderListStylesNames } from './RenderList/RenderList';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { SimpleGrid } from '../SimpleGrid';\nimport { useSelectionState, Selection } from './use-selection-state/use-selection-state';\nimport { TransferListData, TransferListItemComponent, TransferListItem } from './types';\n\nexport type TransferListStylesNames = RenderListStylesNames;\n\nexport interface TransferListProps\n  extends DefaultProps<TransferListStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange' | 'placeholder'> {\n  /** Current value */\n  value: TransferListData;\n\n  /** Called when value changes */\n  onChange(value: TransferListData): void;\n\n  /** Initial items selection */\n  initialSelection?: Selection;\n\n  /** Custom item component */\n  itemComponent?: TransferListItemComponent;\n\n  /** Controlled search queries */\n  searchValues?: [string, string];\n\n  /** Called when one of the search queries changes */\n  onSearch?(value: [string, string]): void;\n\n  /** Search fields placeholder */\n  searchPlaceholder?: string | [string, string];\n\n  /** Nothing found message */\n  nothingFound?: React.ReactNode | [React.ReactNode, React.ReactNode];\n\n  /** Displayed when a list is empty and there is no search query */\n  placeholder?: React.ReactNode | [React.ReactNode, React.ReactNode];\n\n  /** Function to filter search results */\n  filter?(query: string, item: TransferListItem): boolean;\n\n  /** Lists titles */\n  titles?: [string, string];\n\n  /** List items height */\n  listHeight?: number;\n\n  /** Change list component, can be used to add custom scrollbars */\n  listComponent?: any;\n\n  /** Breakpoint at which list will collapse to single column layout */\n  breakpoint?: MantineNumberSize;\n\n  /** Predefined border-radius value from theme.radius or number for border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Whether to hide the transfer all button */\n  showTransferAll?: boolean;\n\n  /** Limit amount of items showed at a time */\n  limit?: number;\n\n  /** Change icon used for the transfer selected control */\n  transferIcon?: React.FunctionComponent<{ reversed: boolean }>;\n\n  /** Change icon used for the transfer all control */\n  transferAllIcon?: React.FunctionComponent<{ reversed: boolean }>;\n\n  /** Whether to transfer only items matching {@link filter} when clicking the transfer all control */\n  transferAllMatchingFilter?: boolean;\n}\n\nexport function defaultFilter(query: string, item: TransferListItem) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst defaultProps: Partial<TransferListProps> = {\n  itemComponent: DefaultItem,\n  filter: defaultFilter,\n  titles: [null, null],\n  placeholder: [null, null],\n  listHeight: 150,\n  listComponent: SelectScrollArea,\n  showTransferAll: true,\n  limit: Infinity,\n  transferAllMatchingFilter: false,\n};\n\nexport const TransferList = forwardRef<HTMLDivElement, TransferListProps>((props, ref) => {\n  const {\n    value,\n    onChange,\n    itemComponent,\n    searchPlaceholder,\n    searchValues,\n    onSearch,\n    filter,\n    nothingFound,\n    placeholder,\n    titles,\n    initialSelection,\n    listHeight,\n    listComponent,\n    showTransferAll,\n    breakpoint,\n    radius,\n    classNames,\n    styles,\n    limit,\n    unstyled,\n    transferIcon,\n    transferAllIcon,\n    transferAllMatchingFilter,\n    ...others\n  } = useComponentDefaultProps('TransferList', defaultProps, props);\n\n  const [selection, handlers] = useSelectionState(initialSelection);\n  const [search, handleSearch] = useUncontrolled({\n    value: searchValues,\n    defaultValue: ['', ''],\n    finalValue: ['', ''],\n    onChange: onSearch,\n  });\n\n  const handleMoveAll = (listIndex: 0 | 1) => {\n    const items: TransferListData = Array(2) as any;\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n\n    if (transferAllMatchingFilter) {\n      const query = search[listIndex];\n      const shownItems = value[listIndex].filter((item) => filter(query, item)).slice(0, limit);\n      const hiddenItems = value[listIndex].filter((item) => !filter(query, item));\n\n      items[listIndex] = hiddenItems;\n      items[moveToIndex] = [...value[moveToIndex], ...shownItems];\n    } else {\n      items[listIndex] = [];\n      items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n    }\n\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const handleMove = (listIndex: 0 | 1) => {\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    const items: TransferListData = Array(2) as any;\n    const transferData = value[listIndex].reduce(\n      (acc, item) => {\n        if (!selection[listIndex].includes(item.value)) {\n          acc.filtered.push(item);\n        } else {\n          acc.current.push(item);\n        }\n        return acc;\n      },\n      { filtered: [], current: [] }\n    );\n    items[listIndex] = transferData.filtered;\n    items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const breakpoints = breakpoint ? [{ maxWidth: breakpoint, cols: 1 }] : [];\n  const sharedListProps = {\n    itemComponent,\n    listComponent,\n    transferIcon,\n    transferAllIcon,\n    filter,\n    height: listHeight,\n    showTransferAll,\n    classNames,\n    styles,\n    limit,\n    radius,\n  };\n\n  return (\n    <SimpleGrid\n      cols={2}\n      spacing=\"xl\"\n      breakpoints={breakpoints}\n      ref={ref}\n      unstyled={unstyled}\n      {...others}\n    >\n      <RenderList\n        {...sharedListProps}\n        data={value[0]}\n        selection={selection[0]}\n        onSelect={(val) => handlers.select(0, val)}\n        onMoveAll={() => handleMoveAll(0)}\n        onMove={() => handleMove(0)}\n        title={titles[0]}\n        placeholder={Array.isArray(placeholder) ? placeholder[0] : placeholder}\n        searchPlaceholder={\n          Array.isArray(searchPlaceholder) ? searchPlaceholder[0] : searchPlaceholder\n        }\n        nothingFound={Array.isArray(nothingFound) ? nothingFound[0] : nothingFound}\n        query={search[0]}\n        onSearch={(query) => handleSearch([query, search[1]])}\n        unstyled={unstyled}\n        transferAllMatchingFilter={transferAllMatchingFilter}\n      />\n\n      <RenderList\n        {...sharedListProps}\n        data={value[1]}\n        selection={selection[1]}\n        onSelect={(val) => handlers.select(1, val)}\n        onMoveAll={() => handleMoveAll(1)}\n        onMove={() => handleMove(1)}\n        title={titles[1]}\n        placeholder={Array.isArray(placeholder) ? placeholder[1] : placeholder}\n        searchPlaceholder={\n          Array.isArray(searchPlaceholder) ? searchPlaceholder[1] : searchPlaceholder\n        }\n        nothingFound={Array.isArray(nothingFound) ? nothingFound[1] : nothingFound}\n        query={search[1]}\n        onSearch={(query) => handleSearch([search[0], query])}\n        reversed\n        unstyled={unstyled}\n        transferAllMatchingFilter={transferAllMatchingFilter}\n      />\n    </SimpleGrid>\n  );\n});\n\nTransferList.displayName = '@mantine/core/TransferList';\n"]},"metadata":{},"sourceType":"module"}