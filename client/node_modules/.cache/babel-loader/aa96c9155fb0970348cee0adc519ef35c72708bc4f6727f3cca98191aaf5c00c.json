{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList(prevReplyList => [...prevReplyList, {\n      text: reply,\n      name: \"You\",\n      likes: [],\n      dislikes: []\n    }]);\n    setReply(\"\");\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n  };\n  const likeReply = replyId => {\n    // ... kodas \"like-reply\" užklausai ...\n  };\n  const dislikeReply = replyId => {\n    // ... kodas \"dislike-reply\" užklausai ...\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => {\n        const selectedThread = data.threads.find(t => t.id === id);\n        // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n        if (selectedThread) {\n          const updatedReplyList = selectedThread.replies.map(reply => ({\n            ...reply,\n            likes: reply.likes || [],\n            dislikes: reply.dislikes || []\n          }));\n          setThread(selectedThread);\n          setReplyList(updatedReplyList);\n          setTitle(selectedThread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      }).catch(err => console.error(err));\n    };\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), localStorage.getItem(\"_id\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"likeBtn\",\n              onClick: () => likeReply(reply._id),\n              children: \"Like\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dislikeBtn\",\n              onClick: () => dislikeReply(reply._id),\n              children: \"Dislike\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, reply._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","prevReplyList","text","name","likes","dislikes","handleSubmitReply","e","preventDefault","likeReply","replyId","dislikeReply","fetchThread","fetch","then","res","json","data","selectedThread","threads","find","t","updatedReplyList","replies","map","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","localStorage","getItem","onSubmit","htmlFor","rows","value","onChange","target","type","style","opacity","onClick","_id","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList((prevReplyList) => [\n      ...prevReplyList,\n      { text: reply, name: \"You\", likes: [], dislikes: [] },\n    ]);\n    setReply(\"\");\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n  };\n\n  const likeReply = (replyId) => {\n    // ... kodas \"like-reply\" užklausai ...\n  };\n\n  const dislikeReply = (replyId) => {\n    // ... kodas \"dislike-reply\" užklausai ...\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n      fetch(\"http://localhost:4000/api/all/threads\")\n        .then((res) => res.json())\n        .then((data) => {\n          const selectedThread = data.threads.find((t) => t.id === id);\n          // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n          if (selectedThread) {\n            const updatedReplyList = selectedThread.replies.map((reply) => ({\n              ...reply,\n              likes: reply.likes || [],\n              dislikes: reply.dislikes || [],\n            }));\n\n            setThread(selectedThread);\n            setReplyList(updatedReplyList);\n            setTitle(selectedThread.title);\n          } else {\n            setTitle(\"Thread not found\");\n          }\n        })\n        .catch((err) => console.error(err));\n    };\n\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {localStorage.getItem(\"_id\") && (\n        <form className=\"modal__content\" onSubmit={handleSubmitReply}>\n          <label htmlFor=\"reply\">Reply to the thread</label>\n          <textarea\n            rows={5}\n            value={reply}\n            onChange={(e) => setReply(e.target.value)}\n            type=\"text\"\n            name=\"reply\"\n            className=\"modalInput\"\n          />\n\n          <button className=\"modalBtn\">SEND</button>\n        </form>\n      )}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <p>{reply.text}</p>\n            <div className=\"react__container\">\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n              {localStorage.getItem(\"_id\") && (\n                <>\n                  <button\n                    className=\"likeBtn\"\n                    onClick={() => likeReply(reply._id)}\n                  >\n                    Like\n                  </button>\n                  <button\n                    className=\"dislikeBtn\"\n                    onClick={() => dislikeReply(reply._id)}\n                  >\n                    Dislike\n                  </button>\n                </>\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}