{"ast":null,"code":"import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled.js';\nimport { range } from '../utils/range/range.js';\nconst DOTS = \"dots\";\n\nfunction usePagination(_ref) {\n  let {\n    total,\n    siblings = 1,\n    boundaries = 1,\n    page,\n    initialPage = 1,\n    onChange\n  } = _ref;\n\n  const _total = Math.max(Math.trunc(total), 0);\n\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage\n  });\n\n  const setPage = pageNumber => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n\n  const previous = () => setPage(activePage - 1);\n\n  const first = () => setPage(1);\n\n  const last = () => setPage(_total);\n\n  const paginationRange = useMemo(() => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n\n    return [...range(1, boundaries), DOTS, ...range(leftSiblingIndex, rightSiblingIndex), DOTS, ...range(_total - boundaries + 1, _total)];\n  }, [_total, siblings, activePage]);\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last\n  };\n}\n\nexport { DOTS, usePagination };","map":{"version":3,"mappings":"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","names":["DOTS","usePagination","total","siblings","boundaries","page","initialPage","onChange","_total","Math","max","trunc","activePage","setActivePage","useUncontrolled","value","defaultValue","finalValue","setPage","pageNumber","next","previous","first","last","paginationRange","useMemo","totalPageNumbers","range","leftSiblingIndex","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","rightItemCount","active"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\hooks\\src\\use-pagination\\use-pagination.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useUncontrolled } from '../use-uncontrolled/use-uncontrolled';\nimport { range } from '../utils';\n\nexport const DOTS = 'dots';\n\nexport interface PaginationParams {\n  /** Page selected on initial render, defaults to 1 */\n  initialPage?: number;\n\n  /** Controlled active page number */\n  page?: number;\n\n  /** Total amount of pages */\n  total: number;\n\n  /** Siblings amount on left/right side of selected page, defaults to 1 */\n  siblings?: number;\n\n  /** Amount of elements visible on left/right edges, defaults to 1  */\n  boundaries?: number;\n\n  /** Callback fired after change of each page */\n  onChange?: (page: number) => void;\n}\n\nexport function usePagination({\n  total,\n  siblings = 1,\n  boundaries = 1,\n  page,\n  initialPage = 1,\n  onChange,\n}: PaginationParams) {\n  const _total = Math.max(Math.trunc(total), 0);\n  const [activePage, setActivePage] = useUncontrolled({\n    value: page,\n    onChange,\n    defaultValue: initialPage,\n    finalValue: initialPage,\n  });\n\n  const setPage = (pageNumber: number) => {\n    if (pageNumber <= 0) {\n      setActivePage(1);\n    } else if (pageNumber > _total) {\n      setActivePage(_total);\n    } else {\n      setActivePage(pageNumber);\n    }\n  };\n\n  const next = () => setPage(activePage + 1);\n  const previous = () => setPage(activePage - 1);\n  const first = () => setPage(1);\n  const last = () => setPage(_total);\n\n  const paginationRange = useMemo((): (number | 'dots')[] => {\n    const totalPageNumbers = siblings * 2 + 3 + boundaries * 2;\n    if (totalPageNumbers >= _total) {\n      return range(1, _total);\n    }\n\n    const leftSiblingIndex = Math.max(activePage - siblings, boundaries);\n    const rightSiblingIndex = Math.min(activePage + siblings, _total - boundaries);\n\n    const shouldShowLeftDots = leftSiblingIndex > boundaries + 2;\n    const shouldShowRightDots = rightSiblingIndex < _total - (boundaries + 1);\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = siblings * 2 + boundaries + 2;\n      return [...range(1, leftItemCount), DOTS, ...range(_total - (boundaries - 1), _total)];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = boundaries + 1 + 2 * siblings;\n      return [...range(1, boundaries), DOTS, ...range(_total - rightItemCount, _total)];\n    }\n\n    return [\n      ...range(1, boundaries),\n      DOTS,\n      ...range(leftSiblingIndex, rightSiblingIndex),\n      DOTS,\n      ...range(_total - boundaries + 1, _total),\n    ];\n  }, [_total, siblings, activePage]);\n\n  return {\n    range: paginationRange,\n    active: activePage,\n    setPage,\n    next,\n    previous,\n    first,\n    last,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}