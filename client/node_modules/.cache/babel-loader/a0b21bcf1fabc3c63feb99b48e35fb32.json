{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    spacing,\n    breakpoints,\n    cols,\n    verticalSpacing\n  } = _ref;\n  const hasVerticalSpacing = verticalSpacing != null;\n  const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n    var _a, _b;\n\n    const property = \"maxWidth\" in breakpoint ? \"max-width\" : \"min-width\";\n    const breakpointSize = theme.fn.size({\n      size: property === \"max-width\" ? breakpoint.maxWidth : breakpoint.minWidth,\n      sizes: theme.breakpoints\n    });\n    acc[`@media (${property}: ${breakpointSize - (property === \"max-width\" ? 1 : 0)}px)`] = {\n      gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n      gap: `${theme.fn.size({\n        size: (_a = breakpoint.verticalSpacing) != null ? _a : hasVerticalSpacing ? verticalSpacing : spacing,\n        sizes: theme.spacing\n      })}px ${theme.fn.size({\n        size: (_b = breakpoint.spacing) != null ? _b : spacing,\n        sizes: theme.spacing\n      })}px`\n    };\n    return acc;\n  }, {});\n  return {\n    root: __spreadValues({\n      boxSizing: \"border-box\",\n      display: \"grid\",\n      gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n      gap: `${theme.fn.size({\n        size: hasVerticalSpacing ? verticalSpacing : spacing,\n        sizes: theme.spacing\n      })}px ${theme.fn.size({\n        size: spacing,\n        sizes: theme.spacing\n      })}px`\n    }, gridBreakpoints)\n  };\n});\nexport default useStyles;","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","createStyles","theme","spacing","breakpoints","cols","verticalSpacing","hasVerticalSpacing","gridBreakpoints","getSortedBreakpoints","reduce","acc","breakpoint","_a","_b","property","breakpointSize","fn","size","maxWidth","minWidth","sizes","gridTemplateColumns","gap","root","boxSizing","display"],"sources":["D:\\forum-system-with-react-novu-node\\client\\node_modules\\@mantine\\core\\src\\SimpleGrid\\SimpleGrid.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n  verticalSpacing?: MantineNumberSize;\n}\n\nexport interface SimpleGridStylesParams {\n  spacing: MantineNumberSize;\n  verticalSpacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles(\n  (theme, { spacing, breakpoints, cols, verticalSpacing }: SimpleGridStylesParams) => {\n    const hasVerticalSpacing = verticalSpacing != null;\n\n    const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n      const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n      const breakpointSize = theme.fn.size({\n        size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n        sizes: theme.breakpoints,\n      });\n\n      acc[`@media (${property}: ${breakpointSize - (property === 'max-width' ? 1 : 0)}px)`] = {\n        gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n        gap: `${theme.fn.size({\n          size: breakpoint.verticalSpacing ?? (hasVerticalSpacing ? verticalSpacing : spacing),\n          sizes: theme.spacing,\n        })}px ${theme.fn.size({\n          size: breakpoint.spacing ?? spacing,\n          sizes: theme.spacing,\n        })}px`,\n      };\n\n      return acc;\n    }, {});\n\n    return {\n      root: {\n        boxSizing: 'border-box',\n        display: 'grid',\n        gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n        gap: `${theme.fn.size({\n          size: hasVerticalSpacing ? verticalSpacing : spacing,\n          sizes: theme.spacing,\n        })}px ${theme.fn.size({\n          size: spacing,\n          sizes: theme.spacing,\n        })}px`,\n        ...gridBreakpoints,\n      },\n    };\n  }\n);\n"]},"metadata":{},"sourceType":"module"}