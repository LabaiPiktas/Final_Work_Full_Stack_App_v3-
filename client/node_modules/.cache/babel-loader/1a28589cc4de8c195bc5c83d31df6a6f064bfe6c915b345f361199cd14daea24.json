{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\man_t\\\\OneDrive\\\\dokumentai\\\\GitHub\\\\Final_Work_Full_Stack_App_v3-\\\\client\\\\src\\\\components\\\\QuestionsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionsList = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [sortedQuestions, setSortedQuestions] = useState([]);\n  const [sortByDate, setSortByDate] = useState(false);\n  const [sortByAnswerCount, setSortByAnswerCount] = useState(false);\n  const [sortOrder, setSortOrder] = useState(\"asc\");\n  const [showAnsweredQuestions, setShowAnsweredQuestions] = useState(false);\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/api/all/threads\");\n        const data = await response.json();\n        console.log(\"Data received from the server:\", data); // Check the data received\n        setQuestions(data.threads);\n      } catch (error) {\n        console.error(\"Error fetching questions:\", error);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  useEffect(() => {\n    let sortedQuestions = [...questions]; // Copy the original questions array\n\n    if (sortByDate) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by question date\n        const dateA = new Date(a.timestamp);\n        const dateB = new Date(b.timestamp);\n        if (sortOrder === \"asc\") {\n          return dateA - dateB; // Ascending order\n        } else {\n          return dateB - dateA; // Descending order\n        }\n      });\n    }\n\n    if (sortByAnswerCount) {\n      sortedQuestions.sort((a, b) => {\n        // Sort by answer count\n        if (sortOrder === \"asc\") {\n          return a.replies.length - b.replies.length; // Ascending order\n        } else {\n          return b.replies.length - a.replies.length; // Descending order\n        }\n      });\n    }\n\n    // Set the updated sorted questions array\n    setSortedQuestions(sortedQuestions);\n  }, [questions, sortByDate, sortByAnswerCount, sortOrder]);\n  const handleSortByDate = () => {\n    setSortByDate(true);\n    setSortByAnswerCount(false);\n  };\n  const handleSortByAnswerCount = () => {\n    setSortByDate(false);\n    setSortByAnswerCount(true);\n  };\n  const handleSortOrder = order => {\n    setSortOrder(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Klausim\\u0173 s\\u0105ra\\u0161as\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"QuestionListButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortByDate,\n        className: \"modalBtn\",\n        children: \"Rikiuoti pagal dat\\u0105\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSortByAnswerCount,\n        className: \"modalBtn\",\n        children: \"Rikiuoti pagal atsakym\\u0173 skai\\u010Di\\u0173\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortOrder(\"asc\"),\n        className: \"modalBtn\",\n        children: \"Did\\u0117jimo tvarka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSortOrder(\"desc\"),\n        className: \"modalBtn\",\n        children: \"Ma\\u017E\\u0117jimo tvarka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAnsweredQuestions(!showAnsweredQuestions),\n        children: showAnsweredQuestions ? \"Rodyti neatsakytus klausimus\" : \"Rodyti atsakytus klausimus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"modalBtn\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sortedQuestions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: question.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Atsakym\\u0173 skai\\u010Dius: \", question.replies.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Klausimo data: \", question.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionsList, \"WFDBneGV9iNP2/DoYU41nFygUGU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuestionsList;\nexport default QuestionsList;\nvar _c;\n$RefreshReg$(_c, \"QuestionsList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","jsxDEV","_jsxDEV","QuestionsList","_s","questions","setQuestions","sortedQuestions","setSortedQuestions","sortByDate","setSortByDate","sortByAnswerCount","setSortByAnswerCount","sortOrder","setSortOrder","showAnsweredQuestions","setShowAnsweredQuestions","id","navigate","fetchQuestions","response","fetch","data","json","console","log","threads","error","sort","a","b","dateA","Date","timestamp","dateB","replies","length","handleSortByDate","handleSortByAnswerCount","handleSortOrder","order","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","to","map","question","title","_c","$RefreshReg$"],"sources":["C:/Users/man_t/OneDrive/dokumentai/GitHub/Final_Work_Full_Stack_App_v3-/client/src/components/QuestionsList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\n\r\nconst QuestionsList = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [sortedQuestions, setSortedQuestions] = useState([]);\r\n  const [sortByDate, setSortByDate] = useState(false);\r\n  const [sortByAnswerCount, setSortByAnswerCount] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n  const [showAnsweredQuestions, setShowAnsweredQuestions] = useState(false);\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchQuestions = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:4000/api/all/threads\");\r\n        const data = await response.json();\r\n        console.log(\"Data received from the server:\", data); // Check the data received\r\n        setQuestions(data.threads);\r\n      } catch (error) {\r\n        console.error(\"Error fetching questions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuestions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedQuestions = [...questions]; // Copy the original questions array\r\n\r\n    if (sortByDate) {\r\n      sortedQuestions.sort((a, b) => {\r\n        // Sort by question date\r\n        const dateA = new Date(a.timestamp);\r\n        const dateB = new Date(b.timestamp);\r\n\r\n        if (sortOrder === \"asc\") {\r\n          return dateA - dateB; // Ascending order\r\n        } else {\r\n          return dateB - dateA; // Descending order\r\n        }\r\n      });\r\n    }\r\n\r\n    if (sortByAnswerCount) {\r\n      sortedQuestions.sort((a, b) => {\r\n        // Sort by answer count\r\n        if (sortOrder === \"asc\") {\r\n          return a.replies.length - b.replies.length; // Ascending order\r\n        } else {\r\n          return b.replies.length - a.replies.length; // Descending order\r\n        }\r\n      });\r\n    }\r\n\r\n    // Set the updated sorted questions array\r\n    setSortedQuestions(sortedQuestions);\r\n  }, [questions, sortByDate, sortByAnswerCount, sortOrder]);\r\n\r\n  const handleSortByDate = () => {\r\n    setSortByDate(true);\r\n    setSortByAnswerCount(false);\r\n  };\r\n\r\n  const handleSortByAnswerCount = () => {\r\n    setSortByDate(false);\r\n    setSortByAnswerCount(true);\r\n  };\r\n\r\n  const handleSortOrder = (order) => {\r\n    setSortOrder(order);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Klausimų sąrašas</h1>\r\n\r\n      <div className=\"QuestionListButtonContainer\">\r\n        <button onClick={handleSortByDate} className=\"modalBtn\">\r\n          Rikiuoti pagal datą\r\n        </button>\r\n        <button onClick={handleSortByAnswerCount} className=\"modalBtn\">\r\n          Rikiuoti pagal atsakymų skaičių\r\n        </button>\r\n        <button onClick={() => handleSortOrder(\"asc\")} className=\"modalBtn\">\r\n          Didėjimo tvarka\r\n        </button>\r\n        <button onClick={() => handleSortOrder(\"desc\")} className=\"modalBtn\">\r\n          Mažėjimo tvarka\r\n        </button>\r\n        <button\r\n          onClick={() => setShowAnsweredQuestions(!showAnsweredQuestions)}\r\n        >\r\n          {showAnsweredQuestions\r\n            ? \"Rodyti neatsakytus klausimus\"\r\n            : \"Rodyti atsakytus klausimus\"}\r\n        </button>\r\n\r\n        <Link to=\"/dashboard\" className=\"modalBtn\">\r\n          Create a Thread\r\n        </Link>\r\n      </div>\r\n\r\n      <div>\r\n        {sortedQuestions.map((question) => (\r\n          <div key={question.id}>\r\n            {/* Display question information */}\r\n            <h3>{question.title}</h3>\r\n            <p>Atsakymų skaičius: {question.replies.length}</p>\r\n            <p>Klausimo data: {question.timestamp}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}