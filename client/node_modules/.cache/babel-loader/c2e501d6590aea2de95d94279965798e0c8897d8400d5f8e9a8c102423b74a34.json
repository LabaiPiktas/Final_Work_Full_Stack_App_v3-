{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  z;\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => {\n        const selectedThread = data.threads.find(t => t.id === id);\n        if (selectedThread) {\n          setThread(selectedThread);\n          setReplyList(selectedThread.replies);\n          setTitle(selectedThread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      }).catch(err => console.error(err));\n    };\n    fetchThread();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), thread && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, reply._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","z","handleSubmitReply","e","preventDefault","addReply","fetchThread","fetch","then","res","json","data","selectedThread","threads","find","t","replies","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","value","onChange","target","type","name","map","text","style","opacity","_id","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  z;\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      fetch(\"http://localhost:4000/api/all/threads\")\n        .then((res) => res.json())\n        .then((data) => {\n          const selectedThread = data.threads.find((t) => t.id === id);\n          if (selectedThread) {\n            setThread(selectedThread);\n            setReplyList(selectedThread.replies);\n            setTitle(selectedThread.title);\n          } else {\n            setTitle(\"Thread not found\");\n          }\n        })\n        .catch((err) => console.error(err));\n    };\n\n    fetchThread();\n  }, [id]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {thread && (\n        <form className=\"modal__content\" onSubmit={handleSubmitReply}>\n          <label htmlFor=\"reply\">Reply to the thread</label>\n          <textarea\n            rows={5}\n            value={reply}\n            onChange={(e) => setReply(e.target.value)}\n            type=\"text\"\n            name=\"reply\"\n            className=\"modalInput\"\n          />\n\n          <button className=\"modalBtn\">SEND</button>\n        </form>\n      )}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <p>{reply.text}</p>\n            <div className=\"react__container\">\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}