{"ast":null,"code":"var _jsxFileName = \"D:\\\\forum-system-with-react-node_edited_crashed\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList(prevReplyList => [...prevReplyList, {\n      text: reply,\n      name: \"You\",\n      likes: [],\n      dislikes: []\n    }]);\n    setReply(\"\");\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n  };\n  const likeReply = replyId => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply liked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            reply.likes.push(localStorage.getItem(\"_id\"));\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  const dislikeReply = replyId => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(data => {\n      if (data.message === \"Reply disliked successfully!\") {\n        setReplyList(prevReplyList => prevReplyList.map(reply => {\n          if (reply._id === replyId) {\n            reply.dislikes.push(localStorage.getItem(\"_id\"));\n          }\n          return reply;\n        }));\n      }\n    }).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => {\n        const selectedThread = data.threads.find(t => t.id === id);\n        // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n        if (selectedThread) {\n          const updatedReplyList = selectedThread.replies.map(reply => ({\n            ...reply,\n            likes: reply.likes || [],\n            dislikes: reply.dislikes || []\n          }));\n          setThread(selectedThread);\n          setReplyList(updatedReplyList);\n          setTitle(selectedThread.title);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      }).catch(err => console.error(err));\n    };\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"react__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              opacity: \"0.5\"\n            },\n            children: [\"by \", reply.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"likeBtn\",\n            onClick: () => likeReply(reply._id),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dislikeBtn\",\n            onClick: () => dislikeReply(reply._id),\n            children: \"Dislike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, reply._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"nR6POzgTzH5seQgzh/5r1G7vztU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","navigate","id","addReply","prevReplyList","text","name","likes","dislikes","handleSubmitReply","e","preventDefault","likeReply","replyId","fetch","method","body","JSON","stringify","userId","localStorage","getItem","headers","then","res","json","data","message","map","_id","push","catch","err","console","error","dislikeReply","fetchThread","selectedThread","threads","find","t","updatedReplyList","replies","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","opacity","onClick","_c","$RefreshReg$"],"sources":["D:/forum-system-with-react-node_edited_crashed/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\nconst Replies = () => {\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  const addReply = () => {\n    // ... kodas pridėti atsakymą ...\n\n    // Atnaujinti atsakymo objektą ir spalvą po sėkmingo atsakymo pridėjimo\n    setReplyList((prevReplyList) => [\n      ...prevReplyList,\n      { text: reply, name: \"You\", likes: [], dislikes: [] },\n    ]);\n    setReply(\"\");\n  };\n\n  const handleSubmitReply = (e) => {\n    e.preventDefault();\n    addReply();\n  };\n\n  const likeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/like-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply liked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                reply.likes.push(localStorage.getItem(\"_id\"));\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const dislikeReply = (replyId) => {\n    fetch(`http://localhost:4000/api/dislike-reply/${replyId}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"_id\"),\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.message === \"Reply disliked successfully!\") {\n          setReplyList((prevReplyList) =>\n            prevReplyList.map((reply) => {\n              if (reply._id === replyId) {\n                reply.dislikes.push(localStorage.getItem(\"_id\"));\n              }\n              return reply;\n            })\n          );\n        }\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    const fetchThread = () => {\n      // ... kodas gauti atsakymus ...\n      fetch(\"http://localhost:4000/api/all/threads\")\n        .then((res) => res.json())\n        .then((data) => {\n          const selectedThread = data.threads.find((t) => t.id === id);\n          // Pridėti likes ir dislikes laukus į atsakymo objektus pagal gautus duomenis\n          if (selectedThread) {\n            const updatedReplyList = selectedThread.replies.map((reply) => ({\n              ...reply,\n              likes: reply.likes || [],\n              dislikes: reply.dislikes || [],\n            }));\n\n            setThread(selectedThread);\n            setReplyList(updatedReplyList);\n            setTitle(selectedThread.title);\n          } else {\n            setTitle(\"Thread not found\");\n          }\n        })\n        .catch((err) => console.error(err));\n    };\n\n    if (thread === null) {\n      fetchThread();\n    }\n  }, [id, thread]);\n\n  return (\n    <main className=\"replies\">\n      <h1 className=\"repliesTitle\">{title}</h1>\n\n      {/* ... kodas atvaizduoti atsakymo formą ... */}\n\n      <div className=\"thread__container\">\n        {replyList.map((reply) => (\n          <div className=\"thread__item\" key={reply._id}>\n            <p>{reply.text}</p>\n            <div className=\"react__container\">\n              <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\n              <button className=\"likeBtn\" onClick={() => likeReply(reply._id)}>\n                Like\n              </button>\n              <button\n                className=\"dislikeBtn\"\n                onClick={() => dislikeReply(reply._id)}\n              >\n                Dislike\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n};\n\nexport default Replies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}