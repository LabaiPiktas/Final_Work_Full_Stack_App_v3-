{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\man_t\\\\bandymas\\\\Final_Work_Full_Stack_App_v3-\\\\client\\\\src\\\\components\\\\Replies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport ReplyLikes from \"../utils/ReplyLikes\";\nimport EditReply from \"./EditReply\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Replies = () => {\n  _s();\n  const [thread, setThread] = useState(null);\n  const [replyList, setReplyList] = useState([]);\n  const [reply, setReply] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [setReplyLikes] = useState([]);\n  const [editReplyId, setEditReplyId] = useState(null); // State variable to store the ID of the reply being edited\n\n  const handleEditReply = (replyId, newText) => {\n    fetch(`http://localhost:4000/api/edit/reply/${id}/${replyId}`, {\n      method: \"PUT\",\n      body: JSON.stringify({\n        newText\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error(\"Failed to edit reply\");\n      }\n    }).then(data => {\n      // Update the replyList with the edited reply\n      setReplyList(prevReplyList => prevReplyList.map(reply => {\n        if (reply._id === replyId) {\n          return {\n            ...reply,\n            text: newText,\n            edited: true\n          };\n        }\n        return reply;\n      }));\n      alert(data.message);\n      setEditReplyId(null); // Turn off the editing mode\n    }).catch(err => console.error(err));\n  };\n  const addReply = () => {\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        replyText: reply,\n        userId: localStorage.getItem(\"_id\")\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error(\"Failed to add reply\");\n      }\n    }).then(data => {\n      window.location.reload(); // Refresh the page\n      if (data.message === \"Reply added successfully!\") {\n        const newReply = {\n          _id: data.reply._id,\n          text: reply,\n          name: \"User\"\n        };\n        setReplyList(prevReplyList => [...prevReplyList, newReply]);\n        setReplyLikes(prevLikes => [...prevLikes, newReply._id]); // Add the new reply's _id to replyLikes state\n        alert(data.message);\n        navigate(`/${id}/replies`); // Navigate to the main page after successful reply submission\n      } else {\n        alert(data.message); // Display the error message\n      }\n    }).catch(err => console.error(err));\n  };\n  const handleSubmitReply = e => {\n    e.preventDefault();\n    addReply();\n    setReply(\"\");\n  };\n  useEffect(() => {\n    const fetchThread = () => {\n      setIsLoading(true);\n      fetch(\"http://localhost:4000/api/all/threads\").then(res => res.json()).then(data => {\n        const selectedThread = data.threads.find(t => t.id === id);\n        if (selectedThread) {\n          setThread(selectedThread);\n          setReplyList(selectedThread.replies || []); // Set replyList as an empty array if it's undefined\n          setTitle(selectedThread.title);\n          // Initialize the likes array for each reply\n          const updatedReplies = selectedThread.replies.map(reply => {\n            return {\n              ...reply,\n              likes: reply.likes || [],\n              name: reply.userId === localStorage.getItem(\"_id\") ? \"You\" : \"User\" // Set the name based on the userId\n            };\n          });\n\n          setReplyList(updatedReplies);\n        } else {\n          setTitle(\"Thread not found\");\n        }\n      }).catch(err => console.error(err)).finally(() => setIsLoading(false));\n    };\n    fetchThread();\n  }, [id]);\n  const deleteReply = replyId => {\n    fetch(`http://localhost:4000/api/delete/reply/${id}/${replyId}`, {\n      method: \"DELETE\"\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      } else {\n        throw new Error(\"Failed to delete reply\");\n      }\n    }).then(data => {\n      setReplyList(prevReplyList => prevReplyList.filter(reply => reply._id !== replyId));\n      alert(data.message);\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"replies\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"repliesTitle\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : thread && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"modal__content\",\n      onSubmit: handleSubmitReply,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"reply\",\n        children: \"Reply to the thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: 5,\n        value: reply,\n        onChange: e => setReply(e.target.value),\n        type: \"text\",\n        name: \"reply\",\n        className: \"modalInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalBtn\",\n        children: \"Create a Thread\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread__container\",\n      children: replyList.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread__item\",\n        children: editReplyId === reply._id ?\n        /*#__PURE__*/\n        // If editing this reply, display the EditReply component\n        _jsxDEV(EditReply, {\n          replyId: reply._id,\n          initialText: reply.text,\n          onEdit: handleEditReply\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this) :\n        /*#__PURE__*/\n        // Otherwise, display the reply information\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: reply.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"react__container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                opacity: \"0.5\"\n              },\n              children: [\"by \", reply.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                opacity: \"0.5\"\n              },\n              children: reply.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), localStorage.getItem(\"_id\") === reply.userId && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => setEditReplyId(reply._id) // Turn on editing mode\n                ,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"modalBtn\",\n                onClick: () => deleteReply(reply._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ReplyLikes, {\n              numberOfLikes: reply.likes.length,\n              replyId: reply._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)\n      }, reply._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Replies, \"bljX9tV7uV/5TqJRuO2mdmVTdJM=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Replies;\nexport default Replies;\nvar _c;\n$RefreshReg$(_c, \"Replies\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Link","ReplyLikes","EditReply","jsxDEV","_jsxDEV","Replies","_s","thread","setThread","replyList","setReplyList","reply","setReply","title","setTitle","isLoading","setIsLoading","navigate","id","setReplyLikes","editReplyId","setEditReplyId","handleEditReply","replyId","newText","fetch","method","body","JSON","stringify","headers","then","res","ok","json","Error","data","prevReplyList","map","_id","text","edited","alert","message","catch","err","console","error","addReply","replyText","userId","localStorage","getItem","window","location","reload","newReply","name","prevLikes","handleSubmitReply","e","preventDefault","fetchThread","selectedThread","threads","find","t","replies","updatedReplies","likes","finally","deleteReply","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","rows","value","onChange","target","type","to","initialText","onEdit","style","opacity","timestamp","onClick","numberOfLikes","length","_c","$RefreshReg$"],"sources":["C:/Users/man_t/bandymas/Final_Work_Full_Stack_App_v3-/client/src/components/Replies.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport ReplyLikes from \"../utils/ReplyLikes\";\r\nimport EditReply from \"./EditReply\";\r\n\r\nconst Replies = () => {\r\n  const [thread, setThread] = useState(null);\r\n  const [replyList, setReplyList] = useState([]);\r\n  const [reply, setReply] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [setReplyLikes] = useState([]);\r\n  const [editReplyId, setEditReplyId] = useState(null); // State variable to store the ID of the reply being edited\r\n\r\n  const handleEditReply = (replyId, newText) => {\r\n    fetch(`http://localhost:4000/api/edit/reply/${id}/${replyId}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({ newText }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"Failed to edit reply\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        // Update the replyList with the edited reply\r\n        setReplyList((prevReplyList) =>\r\n          prevReplyList.map((reply) => {\r\n            if (reply._id === replyId) {\r\n              return {\r\n                ...reply,\r\n                text: newText,\r\n                edited: true,\r\n              };\r\n            }\r\n            return reply;\r\n          })\r\n        );\r\n        alert(data.message);\r\n        setEditReplyId(null); // Turn off the editing mode\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const addReply = () => {\r\n    fetch(`http://localhost:4000/api/add/reply/${id}`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        replyText: reply,\r\n        userId: localStorage.getItem(\"_id\"),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"Failed to add reply\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        window.location.reload(); // Refresh the page\r\n        if (data.message === \"Reply added successfully!\") {\r\n          const newReply = {\r\n            _id: data.reply._id,\r\n            text: reply,\r\n            name: \"User\",\r\n          };\r\n          setReplyList((prevReplyList) => [...prevReplyList, newReply]);\r\n          setReplyLikes((prevLikes) => [...prevLikes, newReply._id]); // Add the new reply's _id to replyLikes state\r\n          alert(data.message);\r\n          navigate(`/${id}/replies`); // Navigate to the main page after successful reply submission\r\n        } else {\r\n          alert(data.message); // Display the error message\r\n        }\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleSubmitReply = (e) => {\r\n    e.preventDefault();\r\n    addReply();\r\n    setReply(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchThread = () => {\r\n      setIsLoading(true);\r\n\r\n      fetch(\"http://localhost:4000/api/all/threads\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const selectedThread = data.threads.find((t) => t.id === id);\r\n          if (selectedThread) {\r\n            setThread(selectedThread);\r\n            setReplyList(selectedThread.replies || []); // Set replyList as an empty array if it's undefined\r\n            setTitle(selectedThread.title);\r\n            // Initialize the likes array for each reply\r\n            const updatedReplies = selectedThread.replies.map((reply) => {\r\n              return {\r\n                ...reply,\r\n                likes: reply.likes || [],\r\n                name:\r\n                  reply.userId === localStorage.getItem(\"_id\") ? \"You\" : \"User\", // Set the name based on the userId\r\n              };\r\n            });\r\n            setReplyList(updatedReplies);\r\n          } else {\r\n            setTitle(\"Thread not found\");\r\n          }\r\n        })\r\n        .catch((err) => console.error(err))\r\n        .finally(() => setIsLoading(false));\r\n    };\r\n\r\n    fetchThread();\r\n  }, [id]);\r\n\r\n  const deleteReply = (replyId) => {\r\n    fetch(`http://localhost:4000/api/delete/reply/${id}/${replyId}`, {\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw new Error(\"Failed to delete reply\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setReplyList((prevReplyList) =>\r\n          prevReplyList.filter((reply) => reply._id !== replyId)\r\n        );\r\n        alert(data.message);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <main className=\"replies\">\r\n      <h1 className=\"repliesTitle\">{title}</h1>\r\n\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        thread && (\r\n          <form className=\"modal__content\" onSubmit={handleSubmitReply}>\r\n            <label htmlFor=\"reply\">Reply to the thread</label>\r\n            <textarea\r\n              rows={5}\r\n              value={reply}\r\n              onChange={(e) => setReply(e.target.value)}\r\n              type=\"text\"\r\n              name=\"reply\"\r\n              className=\"modalInput\"\r\n            />\r\n\r\n            <button className=\"modalBtn\">SEND</button>\r\n          </form>\r\n        )\r\n      )}\r\n      <Link to=\"/dashboard\">\r\n        <button className=\"modalBtn\">Create a Thread</button>\r\n      </Link>\r\n      <div className=\"thread__container\">\r\n        {replyList.map((reply) => (\r\n          <div className=\"thread__item\" key={reply._id}>\r\n            {editReplyId === reply._id ? (\r\n              // If editing this reply, display the EditReply component\r\n              <EditReply\r\n                replyId={reply._id}\r\n                initialText={reply.text}\r\n                onEdit={handleEditReply}\r\n              />\r\n            ) : (\r\n              // Otherwise, display the reply information\r\n              <div>\r\n                <p>{reply.text}</p>\r\n                <div className=\"react__container\">\r\n                  <p style={{ opacity: \"0.5\" }}>by {reply.name}</p>\r\n                  <p style={{ opacity: \"0.5\" }}>{reply.timestamp}</p>\r\n                  {localStorage.getItem(\"_id\") === reply.userId && (\r\n                    <div>\r\n                      <button\r\n                        className=\"modalBtn\"\r\n                        onClick={() => setEditReplyId(reply._id)} // Turn on editing mode\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        className=\"modalBtn\"\r\n                        onClick={() => deleteReply(reply._id)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                  <ReplyLikes\r\n                    numberOfLikes={reply.likes.length}\r\n                    replyId={reply._id}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Replies;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}